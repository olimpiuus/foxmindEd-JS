(()=>{var e={619:(e,t,i)=>{e.exports=i.p+"imgs/moon-waning-crescent.c3556d440980c942661792fe126a221b.svg"},776:(e,t,i)=>{e.exports=i.p+"imgs/white-balance-sunny.192e78bb875e4f1909eae6d408e72fae.svg"},766:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>r});var n=i(91),s=i.n(n),o=new URL(i(376),i.b);const r='<!DOCTYPE html> <html lang="en"> <head> <meta charset="UTF-8"> <meta http-equiv="X-UA-Compatible" content="IE=edge"> <meta name="viewport" content="width=device-width/ninitial-scale=1"> <title>Country</title> <link rel="stylesheet" href="'+s()(o)+'"> </head> <body> <header class="header"> <h1 class="header__title">Where in the world?</h1> <div class="header__btn-mode-block"></div> </header> <main class="countries__container"> <form action="" class="countries__search-form"> <section class="country__search search"> <input class="search__input" type="search" placeholder="Search city" name="city" id="searchLocation"> <ul class="search__options"></ul> </section> <select class="search__select-region" name="regions" id="sel1"> <option disabled="disabled" selected="selected" value="Initial">--Please choose a region--</option> <option value="All">All</option> <option value="Africa">Africa</option> <option value="Americas">Americas</option> <option value="Asia">Asia</option> <option value="Europe">Europe</option> <option value="Oceania">Oceania</option> </select> </form> <div class="countries__list-wrapper"> <ul class="countries__list"> </ul> <div class="spinner-wrapper spinner-deactivated"> <div class="spinner"></div> </div> </div> </main> </body> </html> '},91:e=>{"use strict";e.exports=function(e,t){return t||(t={}),e?(e=String(e.__esModule?e.default:e),t.hash&&(e+=t.hash),t.maybeNeedQuotes&&/[\t\n\f\r "'=<>`]/.test(e)?'"'.concat(e,'"'):e):e}},111:function(e,t,i){"use strict";var n=this&&this.__awaiter||function(e,t,i,n){return new(i||(i=Promise))((function(s,o){function r(e){try{c(n.next(e))}catch(e){o(e)}}function a(e){try{c(n.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?s(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(r,a)}c((n=n.apply(e,t||[])).next())}))},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=s(i(269)),r=s(i(955)),a=new class{constructor(){this._getValue=()=>{if("All"===r.default.element.value||"Initial"===r.default.element.value)return o.default.getSearchResults(this.element.value);{const e=this.element.value.split("");return r.default.getSelectedCountries.filter((t=>{let i=!0;const n=t.name.split("");return e.forEach((e=>{const t=n.findIndex((t=>t===e));-1!==t?n.splice(t,1):i=!1})),i})).map((e=>e.name))}},this._addOption=e=>{this.options.insertAdjacentHTML("beforeend",`\n    <div class="search__option">${e}</div>\n  `)},this.clearOptions=()=>this.options.innerHTML="",this._updateDom=()=>n(this,void 0,void 0,(function*(){let e;this.element.addEventListener("keyup",(()=>{e&&clearTimeout(e),e=setTimeout((()=>n(this,void 0,void 0,(function*(){this.clearOptions();try{(yield this._getValue()).forEach((e=>this._addOption(e)))}catch(e){this.clearOptions(),this._addOption("Country not found")}""===this.element.value&&this.clearOptions()}))),500)}))})),this.element=document.querySelector(".search__input"),this.options=document.querySelector(".search__options"),this._updateDom()}};t.default=a},791:function(e,t,i){"use strict";var n=this&&this.__awaiter||function(e,t,i,n){return new(i||(i=Promise))((function(s,o){function r(e){try{c(n.next(e))}catch(e){o(e)}}function a(e){try{c(n.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?s(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(r,a)}c((n=n.apply(e,t||[])).next())}))},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=s(i(727)),r=s(i(269)),a=s(i(111)),c=s(i(534));(new class{constructor(){this.handler=()=>{document.addEventListener("click",(e=>n(this,void 0,void 0,(function*(){const t=e.target;if(t instanceof HTMLElement){if(t.classList.contains("search__option")){if(!t.textContent||"Country not found"===t.textContent)return;const e=yield r.default.getCountry(t.textContent);o.default.addArrayCountries([e]),a.default.clearOptions(),a.default.element.value=e.name}t.closest(".header__btn-mode-block")&&c.default.changeTheme()}}))))}}}).handler()},937:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=class{constructor(e,t,i,n,s){this.name=e,this.population=t,this.region=i,this.capital=n,this.img=s,this.getCountry=()=>this}}},269:function(e,t,i){"use strict";var n=this&&this.__awaiter||function(e,t,i,n){return new(i||(i=Promise))((function(s,o){function r(e){try{c(n.next(e))}catch(e){o(e)}}function a(e){try{c(n.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?s(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(r,a)}c((n=n.apply(e,t||[])).next())}))},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=s(i(937)),r=new class{constructor(){this._requestByName=e=>n(this,void 0,void 0,(function*(){const t=yield fetch(`https://restcountries.com/v3.1/name/${e}`);return yield t.json()})),this._requestByRegion=e=>n(this,void 0,void 0,(function*(){const t=yield fetch(`https://restcountries.com/v3.1/region/${e}`);return yield t.json()})),this._requestAll=()=>n(this,void 0,void 0,(function*(){const e=yield fetch("https://restcountries.com/v3.1/all");return yield e.json()})),this._getCountryObjFromAnswer=e=>{const{capital:t,name:{official:i},population:n,region:s,flags:{svg:r}}=e;return new o.default(i,n,s,t,r)},this._getCountriesFromRequest=e=>e.map((e=>this._getCountryObjFromAnswer(e))),this.getCountry=e=>n(this,void 0,void 0,(function*(){const t=yield this._requestByName(e);return this._getCountriesFromRequest(t)[0]})),this.getCountiesFromRegionsRequest=e=>n(this,void 0,void 0,(function*(){const t=yield this._requestByRegion(e);return this._getCountriesFromRequest(t)})),this.getSearchResults=e=>n(this,void 0,void 0,(function*(){return(yield this._requestByName(e)).map((e=>e.name.official))})),this.getAllCountries=()=>n(this,void 0,void 0,(function*(){const e=yield this._requestAll();return this._getCountriesFromRequest(e)}))}};t.default=r},727:function(e,t,i){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=n(i(152)),o=new class{constructor(){this.clearList=()=>{this.list.innerHTML=""},this.addCountry=({name:e,population:t,region:i,capital:n,img:s})=>{this.list.insertAdjacentHTML("beforeend",`\n    <li class="countries__country-item country">\n        <img src="${s}" alt="" class="country__flag">\n        <div class="country__description">\n            <h3 class="country__title">${e}</h3>\n            <p class="country__info"><b>Population: </b>${t}</p>\n            <p class="country__info"><b>Region:</b> ${i}</p>\n            <p class="country__info"><b>Capital:</b> ${n}</p>\n        </div>\n    </li>`)},this.addArrayCountries=e=>{s.default.activate(),this.clearList(),this.list.style.display="none",e.forEach((e=>this.addCountry(e))),setTimeout((()=>{s.default.deactivate()}),500),this.list.style.display="grid"},this.list=document.querySelector(".countries__list")}};t.default=o},955:function(e,t,i){"use strict";var n=this&&this.__awaiter||function(e,t,i,n){return new(i||(i=Promise))((function(s,o){function r(e){try{c(n.next(e))}catch(e){o(e)}}function a(e){try{c(n.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?s(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(r,a)}c((n=n.apply(e,t||[])).next())}))},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=s(i(269)),r=s(i(727)),a=new class{constructor(){this._selectListener=()=>{this.element.addEventListener("change",(()=>n(this,void 0,void 0,(function*(){this._selectChoice=this.element.value,"All"===this._selectChoice?this.getSelectedCountries=yield o.default.getAllCountries():this.getSelectedCountries=yield o.default.getCountiesFromRegionsRequest(this._selectChoice),r.default.addArrayCountries(this.getSelectedCountries)}))))},this.element=document.querySelector(".search__select-region"),this._selectChoice=null,this.getSelectedCountries=[],this._selectListener()}};t.default=a},152:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=new class{constructor(){this.activate=()=>{this.element.classList.remove("spinner-deactivated"),this.element.classList.add("spinner-active")},this.deactivate=()=>{this.element.classList.remove("spinner-active"),this.element.classList.add("spinner-deactivated")},this.element=document.querySelector(".spinner-wrapper")}};t.default=i},534:(e,t,i)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=new class{constructor(){this._renderDark=()=>{this.element.innerHTML=`<img class="header__btn-img" src="${this.img.sun}" alt="">\n      <button class="header__btn-mode">Light Mode</button>`},this._renderLight=()=>{this.element.innerHTML=`<img class="header__btn-img" src="${this.img.moon}" alt="">\n      <button class="header__btn-mode">Dark Mode</button>`},this._renderBtn=()=>{"dark"===this._customerTheme?this._renderDark():this._renderLight()},this._initialize=()=>{document.documentElement.setAttribute("data-theme",this._customerTheme),this._renderBtn()},this.changeTheme=()=>{let e;e="light"===this._customerTheme?"dark":"light",document.documentElement.setAttribute("data-theme",e),this._customerTheme=e,n._renderBtn()},this.element=document.querySelector(".header__btn-mode-block"),this.img={sun:i(776),moon:i(619)},this._customerTheme=window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light",this._initialize()}};t.default=n},376:(e,t,i)=>{"use strict";e.exports=i.p+"css/style.css"}},t={};function i(n){var s=t[n];if(void 0!==s)return s.exports;var o=t[n]={exports:{}};return e[n].call(o.exports,o,o.exports,i),o.exports}i.m=e,i.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return i.d(t,{a:t}),t},i.d=(e,t)=>{for(var n in t)i.o(t,n)&&!i.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},i.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),i.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e;i.g.importScripts&&(e=i.g.location+"");var t=i.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var n=t.getElementsByTagName("script");n.length&&(e=n[n.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),i.p=e})(),i.b=document.baseURI||self.location.href,(()=>{"use strict";i(766),i(791)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoiMkJBQUFBLEVBQU9DLFFBQVUsSUFBMEIsZ0UsZ0JDQTNDRCxFQUFPQyxRQUFVLElBQTBCLCtELGdGQ0V2Q0MsRUFBNkIsSUFBSUMsSUFBSSxZQUt6QyxRQUZXLGlQQUQyQixJQUF5Q0QsR0FDZ08sNi9CLHNCQ0gvU0YsRUFBT0MsUUFBVSxTQUFVRyxFQUFLQyxHQU05QixPQUxLQSxJQUVIQSxFQUFVLENBQUMsR0FHUkQsR0FLTEEsRUFBTUUsT0FBT0YsRUFBSUcsV0FBYUgsRUFBSUksUUFBVUosR0FFeENDLEVBQVFJLE9BRVZMLEdBQU9DLEVBQVFJLE1BR2JKLEVBQVFLLGlCQUFtQixvQkFBb0JDLEtBQUtQLEdBQy9DLElBQUtRLE9BQU9SLEVBQUssS0FHbkJBLEdBZkVBLENBZ0JYLEMsb2VDekJBLGtCQUNBLFlBNERNUyxFQUFTLElBMURmLE1BSUVDLGNBTVEsS0FBQUMsVUFBWSxLQUNsQixHQUEyQixRQUF2QixVQUFPQyxRQUFRQyxPQUFzQyxZQUF2QixVQUFPRCxRQUFRQyxNQUMvQyxPQUFPLFVBQVFDLGlCQUFpQkMsS0FBS0gsUUFBUUMsT0FDeEMsQ0FDTCxNQUFNRyxFQUFnQkQsS0FBS0gsUUFBUUMsTUFBTUksTUFBTSxJQVUvQyxPQVRrQixVQUFPQyxxQkFBcUJDLFFBQU9DLElBQ25ELElBQUlDLEdBQVEsRUFDWixNQUFNQyxFQUFPRixFQUFRRSxLQUFLTCxNQUFNLElBS2hDLE9BSkFELEVBQWNPLFNBQVFDLElBQ3BCLE1BQU1DLEVBQVFILEVBQUtJLFdBQVVDLEdBQUlBLElBQUtILEtBQ3pCLElBQVRDLEVBQWFILEVBQUtNLE9BQU9ILEVBQU0sR0FBVUosR0FBTSxDLElBRTlDQSxDQUFLLElBRUdRLEtBQUlULEdBQVNBLEVBQVFFLE0sR0FJbEMsS0FBQVEsV0FBY2pCLElBQ3BCRSxLQUFLZCxRQUFROEIsbUJBQW1CLFlBQWEscUNBQ2ZsQixjQUM5QixFQUdGLEtBQUFtQixhQUFlLElBQUlqQixLQUFLZCxRQUFRZ0MsVUFBVSxHQUVsQyxLQUFBQyxXQUFhLElBQVUsa0NBQzdCLElBQUlDLEVBQ0pwQixLQUFLSCxRQUFRd0IsaUJBQWlCLFNBQVMsS0FFakNELEdBQVFFLGFBQWFGLEdBQ3pCQSxFQUFRRyxZQUFXLElBQVUsa0NBQzNCdkIsS0FBS2lCLGVBQ0wsV0FDNkJqQixLQUFLSixhQUNuQlksU0FBUUksR0FBSVosS0FBS2UsV0FBV0gsSSxDQUUzQyxNQUFNWSxHQUNKeEIsS0FBS2lCLGVBQ0xqQixLQUFLZSxXQUFXLG9CLENBRU8sS0FBckJmLEtBQUtILFFBQVFDLE9BQWNFLEtBQUtpQixjQUNwQyxLQUNHLElBQUksR0FFYixJQWxERWpCLEtBQUtILFFBQVU0QixTQUFTQyxjQUFjLGtCQUN0QzFCLEtBQUtkLFFBQVV1QyxTQUFTQyxjQUFjLG9CQUN0QzFCLEtBQUttQixZQUNQLEdBb0RGLFVBQWdCekIsQyxvZUMvRGhCLGtCQUNBLFlBQ0EsWUFDQSxhQTJCQSxJQXpCQSxNQUVFQyxjQUNFSyxLQUFLMkIsUUFBVSxLQUNiRixTQUFTSixpQkFBaUIsU0FBZ0JPLEdBQVEsa0NBQ2hELE1BQU1DLEVBQVVELEVBQU1DLE9BQ3RCLEdBQU1BLGFBQWtCQyxZQUF4QixDQUdBLEdBQUlELEVBQU9FLFVBQVVDLFNBQVMsa0JBQW1CLENBQy9DLElBQUtILEVBQU9JLGFBQW9DLHNCQUFyQkosRUFBT0ksWUFBb0MsT0FDdEUsTUFBTTVCLFFBQWdCLFVBQVE2QixXQUFXTCxFQUFPSSxhQUNoRCxVQUFTRSxrQkFBa0IsQ0FBQzlCLElBQzVCLFVBQU9ZLGVBQ1AsVUFBT3BCLFFBQVFDLE1BQU1PLEVBQVFFLEksQ0FHM0JzQixFQUFPTyxRQUFRLDRCQUNqQixVQUFRQyxhLENBRVosS0FBRSxDQUVOLElBR2lCVixTLDRFQ3BCbkIsZ0JBQ0VoQyxZQUFtQlksRUFBb0IrQixFQUF5QkMsRUFBcUJDLEVBQXNCQyxHQUF4RixLQUFBbEMsS0FBQUEsRUFBb0IsS0FBQStCLFdBQUFBLEVBQXlCLEtBQUFDLE9BQUFBLEVBQXFCLEtBQUFDLFFBQUFBLEVBQXNCLEtBQUFDLElBQUFBLEVBRTNHLEtBQUFQLFdBQWEsSUFDSmxDLElBRlQsRSxvZUNYRixrQkFzRE0wQyxFQUFVLElBbkRoQixNQUNFL0MsY0FFUSxLQUFBZ0QsZUFBd0JDLEdBQXVCLEVBQUQsZ0NBQ2xELE1BQU1DLFFBQWVDLE1BQU0sdUNBQXVDRixLQUVsRSxhQURvQ0MsRUFBT0UsTUFFL0MsSUFFUSxLQUFBQyxpQkFBeUJULEdBQWtCLEVBQUQsZ0NBQ2hELE1BQU1NLFFBQWVDLE1BQU0seUNBQXlDUCxLQUVwRSxhQURvQ00sRUFBT0UsTUFFN0MsSUFFUSxLQUFBRSxZQUFhLElBQVksRUFBRCxnQ0FDOUIsTUFBTUosUUFBZUMsTUFBTSxzQ0FFM0IsYUFEb0NELEVBQU9FLE1BRTdDLElBRVEsS0FBQUcseUJBQTRCTCxJQUNsQyxNQUFNLFFBQUNMLEVBQVNqQyxNQUFNNEMsU0FBUzVDLEdBQUssV0FBRStCLEVBQVUsT0FBQ0MsRUFBT2EsT0FBT0MsSUFBSVosSUFBUUksRUFDM0UsT0FBTyxJQUFJLFVBQVF0QyxFQUFLK0IsRUFBV0MsRUFBT0MsRUFBUUMsRUFBSSxFQUdoRCxLQUFBYSx5QkFBNEJDLEdBQzNCQSxFQUFLekMsS0FBSzBDLEdBQWF4RCxLQUFLa0QseUJBQXlCTSxLQUc5RCxLQUFBdEIsV0FBb0JVLEdBQXVCLEVBQUQsZ0NBQ3hDLE1BQU1XLFFBQWF2RCxLQUFLMkMsZUFBZUMsR0FDdkMsT0FBTzVDLEtBQUtzRCx5QkFBeUJDLEdBQU0sRUFDN0MsSUFFQSxLQUFBRSw4QkFBdUNsQixHQUFnQixrQ0FDckQsTUFBTWdCLFFBQWF2RCxLQUFLZ0QsaUJBQWlCVCxHQUN6QyxPQUFPdkMsS0FBS3NELHlCQUF5QkMsRUFDdkMsSUFFQSxLQUFBeEQsaUJBQTBCNkMsR0FBdUIsRUFBRCxnQ0FHOUMsYUFGbUI1QyxLQUFLMkMsZUFBZUMsSUFDZjlCLEtBQUk0QyxHQUFNQSxFQUFLbkQsS0FBSzRDLFVBRTlDLElBQ0EsS0FBQVEsZ0JBQWlCLElBQVksRUFBRCxnQ0FDMUIsTUFBTUosUUFBYXZELEtBQUtpRCxjQUN4QixPQUFPakQsS0FBS3NELHlCQUF5QkMsRUFDdkMsR0EvQ2UsR0FtRGpCLFVBQWViLEMsd0tDdkRmLGtCQWtDTWtCLEVBQVcsSUFoQ2hCLE1BRUNqRSxjQUdBLEtBQUFrRSxVQUFZLEtBQ1Y3RCxLQUFLOEQsS0FBSzVDLFVBQVksRUFBRSxFQUUxQixLQUFBNkMsV0FBYSxFQUFFeEQsT0FBTStCLGFBQVdDLFNBQU9DLFVBQVFDLFVBQzdDekMsS0FBSzhELEtBQUs5QyxtQkFBbUIsWUFBYSx5RUFFMUJ5Qix3SEFFcUJsQyxtRUFDaUIrQiw4REFDSkMsK0RBQ0NDLG1DQUU1QyxFQUVULEtBQUFMLGtCQUFxQjZCLElBQ25CLFVBQVFDLFdBQ1JqRSxLQUFLNkQsWUFDTDdELEtBQUs4RCxLQUFLSSxNQUFNQyxRQUFRLE9BQ3hCSCxFQUFJeEQsU0FBUUksR0FBSVosS0FBSytELFdBQVduRCxLQUNoQ1csWUFBVyxLQUNULFVBQVE2QyxZQUFZLEdBQ25CLEtBQ0hwRSxLQUFLOEQsS0FBS0ksTUFBTUMsUUFBUSxNQUFNLEVBekI5Qm5FLEtBQUs4RCxLQUFPckMsU0FBU0MsY0FBYyxtQkFDckMsR0E2QkYsVUFBZWtDLEMsb2VDbkNmLGtCQUNBLFlBeUJNUyxFQUFTLElBdkJmLE1BS0UxRSxjQU1RLEtBQUEyRSxnQkFBa0IsS0FDeEJ0RSxLQUFLSCxRQUFRd0IsaUJBQWlCLFVBQVUsSUFBVSxrQ0FDaERyQixLQUFLdUUsY0FBZ0J2RSxLQUFLSCxRQUFRQyxNQUNULFFBQXJCRSxLQUFLdUUsY0FDUHZFLEtBQUtHLDJCQUE2QixVQUFRd0Qsa0JBRTFDM0QsS0FBS0csMkJBQTZCLFVBQVFzRCw4QkFBOEJ6RCxLQUFLdUUsZUFFL0UsVUFBU3BDLGtCQUFrQm5DLEtBQUtHLHFCQUNsQyxLQUFFLEVBZEZILEtBQUtILFFBQVU0QixTQUFTQyxjQUFjLDBCQUN0QzFCLEtBQUt1RSxjQUFnQixLQUNyQnZFLEtBQUtHLHFCQUFxQixHQUMxQkgsS0FBS3NFLGlCQUNQLEdBY0YsVUFBZUQsQyw0RUNkZixNQUFNRyxFQUFVLElBZGhCLE1BRUU3RSxjQUdBLEtBQUFzRSxTQUFXLEtBQ1RqRSxLQUFLSCxRQUFRa0MsVUFBVTBDLE9BQU8sdUJBQzlCekUsS0FBS0gsUUFBUWtDLFVBQVUyQyxJQUFJLGlCQUFpQixFQUU5QyxLQUFBTixXQUFhLEtBQ1hwRSxLQUFLSCxRQUFRa0MsVUFBVTBDLE9BQU8sa0JBQzlCekUsS0FBS0gsUUFBUWtDLFVBQVUyQyxJQUFJLHNCQUFzQixFQVJqRDFFLEtBQUtILFFBQVU0QixTQUFTQyxjQUFjLG1CQUN4QyxHQVdGLFVBQWU4QyxDLDhFQzJCZixNQUFNRyxFQUFVLElBekNoQixNQU9FaEYsY0FVVSxLQUFBaUYsWUFBYyxLQUNwQjVFLEtBQUtILFFBQVFxQixVQUFVLHFDQUFxQ2xCLEtBQUt5QyxJQUFJb0MsMEVBQ2hCLEVBRS9DLEtBQUFDLGFBQWUsS0FDckI5RSxLQUFLSCxRQUFRcUIsVUFBVSxxQ0FBcUNsQixLQUFLeUMsSUFBSXNDLDBFQUNqQixFQUU5QyxLQUFBQyxXQUFhLEtBQ0csU0FBdEJoRixLQUFLaUYsZUFBd0JqRixLQUFLNEUsY0FBYzVFLEtBQUs4RSxjQUFjLEVBRTdELEtBQUFJLFlBQWMsS0FDcEJ6RCxTQUFTMEQsZ0JBQWdCQyxhQUFhLGFBQWNwRixLQUFLaUYsZ0JBQ3pEakYsS0FBS2dGLFlBQVksRUFFbkIsS0FBQTNDLFlBQWMsS0FDWixJQUFJZ0QsRUFDOEJBLEVBQVYsVUFBeEJyRixLQUFLaUYsZUFBMkMsT0FBdUIsUUFDdkV4RCxTQUFTMEQsZ0JBQWdCQyxhQUFhLGFBQWNDLEdBQ3BEckYsS0FBS2lGLGVBQWlCSSxFQUN0QlYsRUFBUUssWUFBWSxFQTdCdEJoRixLQUFLSCxRQUFVNEIsU0FBU0MsY0FBYywyQkFDdEMxQixLQUFLeUMsSUFBTSxDQUNUb0MsSUFBSyxFQUFTLEtBQ2RFLEtBQU0sRUFBUyxNQUVqQi9FLEtBQUtpRixlQUFpQkssT0FBT0MsV0FBVyxnQ0FBZ0NDLFFBQVUsT0FBUyxRQUMzRnhGLEtBQUtrRixhQUNQLEdBNEJGLFVBQWVQLEMsNkRDM0NYYyxFQUEyQixDQUFDLEVBR2hDLFNBQVNDLEVBQW9CQyxHQUU1QixJQUFJQyxFQUFlSCxFQUF5QkUsR0FDNUMsUUFBcUJFLElBQWpCRCxFQUNILE9BQU9BLEVBQWE5RyxRQUdyQixJQUFJRCxFQUFTNEcsRUFBeUJFLEdBQVksQ0FHakQ3RyxRQUFTLENBQUMsR0FPWCxPQUhBZ0gsRUFBb0JILEdBQVVJLEtBQUtsSCxFQUFPQyxRQUFTRCxFQUFRQSxFQUFPQyxRQUFTNEcsR0FHcEU3RyxFQUFPQyxPQUNmLENBR0E0RyxFQUFvQk0sRUFBSUYsRUN4QnhCSixFQUFvQk8sRUFBS3BILElBQ3hCLElBQUlxSCxFQUFTckgsR0FBVUEsRUFBT08sV0FDN0IsSUFBT1AsRUFBaUIsUUFDeEIsSUFBTSxFQUVQLE9BREE2RyxFQUFvQlMsRUFBRUQsRUFBUSxDQUFFRSxFQUFHRixJQUM1QkEsQ0FBTSxFQ0xkUixFQUFvQlMsRUFBSSxDQUFDckgsRUFBU3VILEtBQ2pDLElBQUksSUFBSUMsS0FBT0QsRUFDWFgsRUFBb0JhLEVBQUVGLEVBQVlDLEtBQVNaLEVBQW9CYSxFQUFFekgsRUFBU3dILElBQzVFRSxPQUFPQyxlQUFlM0gsRUFBU3dILEVBQUssQ0FBRUksWUFBWSxFQUFNQyxJQUFLTixFQUFXQyxJQUUxRSxFQ05EWixFQUFvQmtCLEVBQUksV0FDdkIsR0FBMEIsaUJBQWZDLFdBQXlCLE9BQU9BLFdBQzNDLElBQ0MsT0FBTzdHLE1BQVEsSUFBSThHLFNBQVMsY0FBYixFQUdoQixDQUZFLE1BQU9DLEdBQ1IsR0FBc0IsaUJBQVh6QixPQUFxQixPQUFPQSxNQUN4QyxDQUNBLENBUHVCLEdDQXhCSSxFQUFvQmEsRUFBSSxDQUFDUyxFQUFLQyxJQUFVVCxPQUFPVSxVQUFVQyxlQUFlcEIsS0FBS2lCLEVBQUtDLEdDQ2xGdkIsRUFBb0IwQixFQUFLdEksSUFDSCxvQkFBWHVJLFFBQTBCQSxPQUFPQyxhQUMxQ2QsT0FBT0MsZUFBZTNILEVBQVN1SSxPQUFPQyxZQUFhLENBQUV4SCxNQUFPLFdBRTdEMEcsT0FBT0MsZUFBZTNILEVBQVMsYUFBYyxDQUFFZ0IsT0FBTyxHQUFPLEUsTUNMOUQsSUFBSXlILEVBQ0E3QixFQUFvQmtCLEVBQUVZLGdCQUFlRCxFQUFZN0IsRUFBb0JrQixFQUFFYSxTQUFXLElBQ3RGLElBQUloRyxFQUFXaUUsRUFBb0JrQixFQUFFbkYsU0FDckMsSUFBSzhGLEdBQWE5RixJQUNiQSxFQUFTaUcsZ0JBQ1pILEVBQVk5RixFQUFTaUcsY0FBY0MsTUFDL0JKLEdBQVcsQ0FDZixJQUFJSyxFQUFVbkcsRUFBU29HLHFCQUFxQixVQUN6Q0QsRUFBUUUsU0FBUVAsRUFBWUssRUFBUUEsRUFBUUUsT0FBUyxHQUFHSCxJQUM1RCxDQUlELElBQUtKLEVBQVcsTUFBTSxJQUFJUSxNQUFNLHlEQUNoQ1IsRUFBWUEsRUFBVVMsUUFBUSxPQUFRLElBQUlBLFFBQVEsUUFBUyxJQUFJQSxRQUFRLFlBQWEsS0FDcEZ0QyxFQUFvQnVDLEVBQUlWLEMsS0NmeEI3QixFQUFvQndDLEVBQUl6RyxTQUFTMEcsU0FBV0MsS0FBS1gsU0FBU1ksSyxtQkNBMUQsT0FDQSxNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanMvLi9zcmMvYXNzZXRzL2ltZy9tb29uLXdhbmluZy1jcmVzY2VudC5zdmciLCJ3ZWJwYWNrOi8vanMvLi9zcmMvYXNzZXRzL2ltZy93aGl0ZS1iYWxhbmNlLXN1bm55LnN2ZyIsIndlYnBhY2s6Ly9qcy8uL3NyYy9pbmRleC5odG1sIiwid2VicGFjazovL2pzLy4vbm9kZV9tb2R1bGVzL2h0bWwtbG9hZGVyL2Rpc3QvcnVudGltZS9nZXRVcmwuanMiLCJ3ZWJwYWNrOi8vanMvLi9zcmMvdHMvY29tcG9uZW50L2FwcC50cyIsIndlYnBhY2s6Ly9qcy8uL3NyYy90cy9jb21wb25lbnQvY2xpY2tIYW5kbGVyLnRzIiwid2VicGFjazovL2pzLy4vc3JjL3RzL2NvbXBvbmVudC9jb3VudHJ5LnRzIiwid2VicGFjazovL2pzLy4vc3JjL3RzL2NvbXBvbmVudC9nZXREYXRhLnRzIiwid2VicGFjazovL2pzLy4vc3JjL3RzL2NvbXBvbmVudC9yZW5kZXJMaXN0LnRzIiwid2VicGFjazovL2pzLy4vc3JjL3RzL2NvbXBvbmVudC9zZWxlY3QudHMiLCJ3ZWJwYWNrOi8vanMvLi9zcmMvdHMvY29tcG9uZW50L3NwaW5uZXIudHMiLCJ3ZWJwYWNrOi8vanMvLi9zcmMvdHMvY29tcG9uZW50L3RoZW1lLnRzIiwid2VicGFjazovL2pzL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL2pzL3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovL2pzL3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly9qcy93ZWJwYWNrL3J1bnRpbWUvZ2xvYmFsIiwid2VicGFjazovL2pzL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vanMvd2VicGFjay9ydW50aW1lL21ha2UgbmFtZXNwYWNlIG9iamVjdCIsIndlYnBhY2s6Ly9qcy93ZWJwYWNrL3J1bnRpbWUvcHVibGljUGF0aCIsIndlYnBhY2s6Ly9qcy93ZWJwYWNrL3J1bnRpbWUvanNvbnAgY2h1bmsgbG9hZGluZyIsIndlYnBhY2s6Ly9qcy8uL3NyYy90cy9pbmRleC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJpbWdzL21vb24td2FuaW5nLWNyZXNjZW50LmMzNTU2ZDQ0MDk4MGM5NDI2NjE3OTJmZTEyNmEyMjFiLnN2Z1wiOyIsIm1vZHVsZS5leHBvcnRzID0gX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcImltZ3Mvd2hpdGUtYmFsYW5jZS1zdW5ueS4xOTJlNzhiYjg3NWU0ZjE5MDllYWU2ZDQwOGU3MmZhZS5zdmdcIjsiLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fSFRNTF9MT0FERVJfR0VUX1NPVVJDRV9GUk9NX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2h0bWwtbG9hZGVyL2Rpc3QvcnVudGltZS9nZXRVcmwuanNcIjtcbnZhciBfX19IVE1MX0xPQURFUl9JTVBPUlRfMF9fXyA9IG5ldyBVUkwoXCIuL3Nhc3Mvc3R5bGUuc2Fzc1wiLCBpbXBvcnQubWV0YS51cmwpO1xuLy8gTW9kdWxlXG52YXIgX19fSFRNTF9MT0FERVJfUkVQTEFDRU1FTlRfMF9fXyA9IF9fX0hUTUxfTE9BREVSX0dFVF9TT1VSQ0VfRlJPTV9JTVBPUlRfX18oX19fSFRNTF9MT0FERVJfSU1QT1JUXzBfX18pO1xudmFyIGNvZGUgPSBcIjwhRE9DVFlQRSBodG1sPiA8aHRtbCBsYW5nPVxcXCJlblxcXCI+IDxoZWFkPiA8bWV0YSBjaGFyc2V0PVxcXCJVVEYtOFxcXCI+IDxtZXRhIGh0dHAtZXF1aXY9XFxcIlgtVUEtQ29tcGF0aWJsZVxcXCIgY29udGVudD1cXFwiSUU9ZWRnZVxcXCI+IDxtZXRhIG5hbWU9XFxcInZpZXdwb3J0XFxcIiBjb250ZW50PVxcXCJ3aWR0aD1kZXZpY2Utd2lkdGgvbmluaXRpYWwtc2NhbGU9MVxcXCI+IDx0aXRsZT5Db3VudHJ5PC90aXRsZT4gPGxpbmsgcmVsPVxcXCJzdHlsZXNoZWV0XFxcIiBocmVmPVxcXCJcIiArIF9fX0hUTUxfTE9BREVSX1JFUExBQ0VNRU5UXzBfX18gKyBcIlxcXCI+IDwvaGVhZD4gPGJvZHk+IDxoZWFkZXIgY2xhc3M9XFxcImhlYWRlclxcXCI+IDxoMSBjbGFzcz1cXFwiaGVhZGVyX190aXRsZVxcXCI+V2hlcmUgaW4gdGhlIHdvcmxkPzwvaDE+IDxkaXYgY2xhc3M9XFxcImhlYWRlcl9fYnRuLW1vZGUtYmxvY2tcXFwiPjwvZGl2PiA8L2hlYWRlcj4gPG1haW4gY2xhc3M9XFxcImNvdW50cmllc19fY29udGFpbmVyXFxcIj4gPGZvcm0gYWN0aW9uPVxcXCJcXFwiIGNsYXNzPVxcXCJjb3VudHJpZXNfX3NlYXJjaC1mb3JtXFxcIj4gPHNlY3Rpb24gY2xhc3M9XFxcImNvdW50cnlfX3NlYXJjaCBzZWFyY2hcXFwiPiA8aW5wdXQgY2xhc3M9XFxcInNlYXJjaF9faW5wdXRcXFwiIHR5cGU9XFxcInNlYXJjaFxcXCIgcGxhY2Vob2xkZXI9XFxcIlNlYXJjaCBjaXR5XFxcIiBuYW1lPVxcXCJjaXR5XFxcIiBpZD1cXFwic2VhcmNoTG9jYXRpb25cXFwiPiA8dWwgY2xhc3M9XFxcInNlYXJjaF9fb3B0aW9uc1xcXCI+PC91bD4gPC9zZWN0aW9uPiA8c2VsZWN0IGNsYXNzPVxcXCJzZWFyY2hfX3NlbGVjdC1yZWdpb25cXFwiIG5hbWU9XFxcInJlZ2lvbnNcXFwiIGlkPVxcXCJzZWwxXFxcIj4gPG9wdGlvbiBkaXNhYmxlZD1cXFwiZGlzYWJsZWRcXFwiIHNlbGVjdGVkPVxcXCJzZWxlY3RlZFxcXCIgdmFsdWU9XFxcIkluaXRpYWxcXFwiPi0tUGxlYXNlIGNob29zZSBhIHJlZ2lvbi0tPC9vcHRpb24+IDxvcHRpb24gdmFsdWU9XFxcIkFsbFxcXCI+QWxsPC9vcHRpb24+IDxvcHRpb24gdmFsdWU9XFxcIkFmcmljYVxcXCI+QWZyaWNhPC9vcHRpb24+IDxvcHRpb24gdmFsdWU9XFxcIkFtZXJpY2FzXFxcIj5BbWVyaWNhczwvb3B0aW9uPiA8b3B0aW9uIHZhbHVlPVxcXCJBc2lhXFxcIj5Bc2lhPC9vcHRpb24+IDxvcHRpb24gdmFsdWU9XFxcIkV1cm9wZVxcXCI+RXVyb3BlPC9vcHRpb24+IDxvcHRpb24gdmFsdWU9XFxcIk9jZWFuaWFcXFwiPk9jZWFuaWE8L29wdGlvbj4gPC9zZWxlY3Q+IDwvZm9ybT4gPGRpdiBjbGFzcz1cXFwiY291bnRyaWVzX19saXN0LXdyYXBwZXJcXFwiPiA8dWwgY2xhc3M9XFxcImNvdW50cmllc19fbGlzdFxcXCI+IDwvdWw+IDxkaXYgY2xhc3M9XFxcInNwaW5uZXItd3JhcHBlciBzcGlubmVyLWRlYWN0aXZhdGVkXFxcIj4gPGRpdiBjbGFzcz1cXFwic3Bpbm5lclxcXCI+PC9kaXY+IDwvZGl2PiA8L2Rpdj4gPC9tYWluPiA8L2JvZHk+IDwvaHRtbD4gXCI7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBjb2RlOyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh1cmwsIG9wdGlvbnMpIHtcbiAgaWYgKCFvcHRpb25zKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gICAgb3B0aW9ucyA9IHt9O1xuICB9XG5cbiAgaWYgKCF1cmwpIHtcbiAgICByZXR1cm4gdXJsO1xuICB9IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlcnNjb3JlLWRhbmdsZSwgbm8tcGFyYW0tcmVhc3NpZ25cblxuXG4gIHVybCA9IFN0cmluZyh1cmwuX19lc01vZHVsZSA/IHVybC5kZWZhdWx0IDogdXJsKTtcblxuICBpZiAob3B0aW9ucy5oYXNoKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gICAgdXJsICs9IG9wdGlvbnMuaGFzaDtcbiAgfVxuXG4gIGlmIChvcHRpb25zLm1heWJlTmVlZFF1b3RlcyAmJiAvW1xcdFxcblxcZlxcciBcIic9PD5gXS8udGVzdCh1cmwpKSB7XG4gICAgcmV0dXJuIFwiXFxcIlwiLmNvbmNhdCh1cmwsIFwiXFxcIlwiKTtcbiAgfVxuXG4gIHJldHVybiB1cmw7XG59OyIsImltcG9ydCByZXF1ZXN0IGZyb20gXCIuL2dldERhdGFcIlxuaW1wb3J0IHNlbGVjdCBmcm9tIFwiLi9zZWxlY3RcIlxuXG5jbGFzcyBTZWFyY2gge1xuICBlbGVtZW50OkhUTUxJbnB1dEVsZW1lbnRcbiAgb3B0aW9uczpIVE1MVUxpc3RFbGVtZW50XG4gIFxuICBjb25zdHJ1Y3Rvcigpe1xuICAgIHRoaXMuZWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zZWFyY2hfX2lucHV0JykhXG4gICAgdGhpcy5vcHRpb25zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNlYXJjaF9fb3B0aW9ucycpIVxuICAgIHRoaXMuX3VwZGF0ZURvbSgpXG4gIH1cblxuICBwcml2YXRlIF9nZXRWYWx1ZSA9ICgpPT57XG4gICAgaWYgKHNlbGVjdC5lbGVtZW50LnZhbHVlPT09J0FsbCd8fHNlbGVjdC5lbGVtZW50LnZhbHVlPT09J0luaXRpYWwnKSB7XG4gICAgICByZXR1cm4gcmVxdWVzdC5nZXRTZWFyY2hSZXN1bHRzKHRoaXMuZWxlbWVudC52YWx1ZSlcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc3Qgc2VhcmNoTGV0dGVycyA9IHRoaXMuZWxlbWVudC52YWx1ZS5zcGxpdCgnJylcbiAgICAgIGNvbnN0IGNvdW50cmllcyA9IHNlbGVjdC5nZXRTZWxlY3RlZENvdW50cmllcy5maWx0ZXIoY291bnRyeT0+e1xuICAgICAgICBsZXQgY2hlY2sgPSB0cnVlXG4gICAgICAgIGNvbnN0IG5hbWUgPSBjb3VudHJ5Lm5hbWUuc3BsaXQoJycpXG4gICAgICAgIHNlYXJjaExldHRlcnMuZm9yRWFjaChsZXR0ZXI9PntcbiAgICAgICAgICBjb25zdCBpbmRleCA9IG5hbWUuZmluZEluZGV4KGVsPT5lbD09PWxldHRlcilcbiAgICAgICAgICBpZiAoaW5kZXghPT0tMSkge25hbWUuc3BsaWNlKGluZGV4LDEpfSBlbHNlIHtjaGVjaz1mYWxzZX1cbiAgICAgICAgfSlcbiAgICAgICAgcmV0dXJuIGNoZWNrXG4gICAgICB9KVxuICAgICAgcmV0dXJuIGNvdW50cmllcy5tYXAoY291bnRyeT0+Y291bnRyeS5uYW1lKVxuICAgIH1cbiAgfSBcblxuICBwcml2YXRlIF9hZGRPcHRpb24gPSAodmFsdWU6c3RyaW5nKT0+e1xuICAgIHRoaXMub3B0aW9ucy5pbnNlcnRBZGphY2VudEhUTUwoXCJiZWZvcmVlbmRcIiwgYFxuICAgIDxkaXYgY2xhc3M9XCJzZWFyY2hfX29wdGlvblwiPiR7dmFsdWV9PC9kaXY+XG4gIGApXG4gIH1cblxuICBjbGVhck9wdGlvbnMgPSAoKT0+dGhpcy5vcHRpb25zLmlubmVySFRNTD0nJ1xuXG4gIHByaXZhdGUgX3VwZGF0ZURvbSA9IGFzeW5jICgpPT57XG4gICAgbGV0IGRlbGF5OiBOb2RlSlMuVGltZW91dFxuICAgIHRoaXMuZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXl1cCcsICgpPT57XG5cbiAgICAgIGlmIChkZWxheSkge2NsZWFyVGltZW91dChkZWxheSl9XG4gICAgICBkZWxheSA9IHNldFRpbWVvdXQoYXN5bmMgKCk9PntcbiAgICAgICAgdGhpcy5jbGVhck9wdGlvbnMoKVxuICAgICAgICB0cnkgeyAgICAgICAgICBcbiAgICAgICAgICBjb25zdCBzZWFyY2hWYWx1ZXMgPSBhd2FpdCB0aGlzLl9nZXRWYWx1ZSgpXG4gICAgICAgICAgc2VhcmNoVmFsdWVzLmZvckVhY2goZWw9PnRoaXMuX2FkZE9wdGlvbihlbCkpXG4gICAgICAgICAgfVxuICAgICAgICBjYXRjaChlcnJvcil7XG4gICAgICAgICAgdGhpcy5jbGVhck9wdGlvbnMoKVxuICAgICAgICAgIHRoaXMuX2FkZE9wdGlvbignQ291bnRyeSBub3QgZm91bmQnKVxuICAgICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuZWxlbWVudC52YWx1ZT09PScnKSB7IHRoaXMuY2xlYXJPcHRpb25zKCl9XG4gICAgICAgIH1cbiAgICAgICAgICAsNTAwKVxuICAgICAgfSlcbiAgfVxufVxuXG5jb25zdCBzZWFyY2ggPSBuZXcgU2VhcmNoKClcblxuZXhwb3J0IGRlZmF1bHQgIHNlYXJjaCIsImltcG9ydCByZW5kZXJGbiBmcm9tIFwiLi9yZW5kZXJMaXN0XCJcbmltcG9ydCByZXF1ZXN0IGZyb20gXCIuL2dldERhdGFcIlxuaW1wb3J0IHNlYXJjaCBmcm9tIFwiLi9hcHBcIlxuaW1wb3J0IGJ0bk1vZGUgIGZyb20gXCIuL3RoZW1lXCI7XG5cbmNsYXNzIENsaWNrSGFuZGxlciB7XG4gIGhhbmRsZXI6ICgpID0+IHZvaWRcbiAgY29uc3RydWN0b3IoKXtcbiAgICB0aGlzLmhhbmRsZXIgPSAoKT0+e1xuICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBhc3luYyAoZXZlbnQpPT57XG4gICAgICAgIGNvbnN0IHRhcmdldCA9ICBldmVudC50YXJnZXRcbiAgICAgICAgaWYgKCEodGFyZ2V0IGluc3RhbmNlb2YgSFRNTEVsZW1lbnQpKSB7cmV0dXJufVxuXG4gICAgICAgIC8vIGZpbmQgc3BlY2lhbCBjb3VudHJ5IGZyb20gc2VhcmNoIGxpc3RcbiAgICAgICAgaWYgKHRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoJ3NlYXJjaF9fb3B0aW9uJykpIHsgXG4gICAgICAgICAgaWYgKCF0YXJnZXQudGV4dENvbnRlbnQgfHwgdGFyZ2V0LnRleHRDb250ZW50PT09J0NvdW50cnkgbm90IGZvdW5kJykge3JldHVybn1cbiAgICAgICAgICBjb25zdCBjb3VudHJ5ID0gYXdhaXQgcmVxdWVzdC5nZXRDb3VudHJ5KHRhcmdldC50ZXh0Q29udGVudClcbiAgICAgICAgICByZW5kZXJGbi5hZGRBcnJheUNvdW50cmllcyhbY291bnRyeV0pXG4gICAgICAgICAgc2VhcmNoLmNsZWFyT3B0aW9ucygpXG4gICAgICAgICAgc2VhcmNoLmVsZW1lbnQudmFsdWU9Y291bnRyeS5uYW1lXG4gICAgICAgIH1cbiAgICAgICAgLy8gY2hhbmdlIGRvYyB0aGVtZVxuICAgICAgICBpZiAodGFyZ2V0LmNsb3Nlc3QoJy5oZWFkZXJfX2J0bi1tb2RlLWJsb2NrJykpIHtcbiAgICAgICAgICBidG5Nb2RlLmNoYW5nZVRoZW1lKClcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICB9XG4gIH1cbn1cblxubmV3IENsaWNrSGFuZGxlcigpLmhhbmRsZXIoKVxuIiwiZXhwb3J0IGludGVyZmFjZSBJQ291bnRyeUFuc3dlciB7XG4gIGNhcGl0YWw6c3RyaW5nXG4gIGZsYWdzIDoge1xuICAgIHN2ZzpzdHJpbmdcbiAgfVxuICBuYW1lOnsgb2ZmaWNpYWw6IHN0cmluZ31cbiAgcG9wdWxhdGlvbjpudW1iZXJcbiAgcmVnaW9uOnN0cmluZ1xufVxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDb3VudHJ5IHtcbiAgY29uc3RydWN0b3IocHVibGljIG5hbWU6c3RyaW5nLCBwdWJsaWMgcG9wdWxhdGlvbjpudW1iZXIscHVibGljIHJlZ2lvbjpzdHJpbmcscHVibGljIGNhcGl0YWw6c3RyaW5nLHB1YmxpYyBpbWc6c3RyaW5nKXtcbiAgfVxuICBnZXRDb3VudHJ5ID0gKCk9PntcbiAgICByZXR1cm4gdGhpc1xuICB9XG59XG4iLCJcbmltcG9ydCBDb3VudHJ5IGZyb20gXCIuL2NvdW50cnlcIlxuaW1wb3J0IHsgSUNvdW50cnlBbnN3ZXIgfSBmcm9tIFwiLi9jb3VudHJ5XCI7XG5cbmNsYXNzIEdldERhdGEge1xuICBjb25zdHJ1Y3RvcigpIHt9XG5cbiAgcHJpdmF0ZSBfcmVxdWVzdEJ5TmFtZSA9IGFzeW5jIChuYW1lQ291bnRyeTpzdHJpbmcpID0+IHtcbiAgICAgIGNvbnN0IGFuc3dlciA9IGF3YWl0IGZldGNoKGBodHRwczovL3Jlc3Rjb3VudHJpZXMuY29tL3YzLjEvbmFtZS8ke25hbWVDb3VudHJ5fWApXG4gICAgICBjb25zdCBkYXRhOklDb3VudHJ5QW5zd2VyW10gPSBhd2FpdCBhbnN3ZXIuanNvbigpXG4gICAgICByZXR1cm4gZGF0YVxuICB9XG5cbiAgcHJpdmF0ZSBfcmVxdWVzdEJ5UmVnaW9uID1hc3luYyAocmVnaW9uOnN0cmluZykgPT4ge1xuICAgIGNvbnN0IGFuc3dlciA9IGF3YWl0IGZldGNoKGBodHRwczovL3Jlc3Rjb3VudHJpZXMuY29tL3YzLjEvcmVnaW9uLyR7cmVnaW9ufWApXG4gICAgY29uc3QgZGF0YTpJQ291bnRyeUFuc3dlcltdID0gYXdhaXQgYW5zd2VyLmpzb24oKVxuICAgIHJldHVybiBkYXRhXG4gIH1cblxuICBwcml2YXRlIF9yZXF1ZXN0QWxsID1hc3luYyAoKSA9PiB7XG4gICAgY29uc3QgYW5zd2VyID0gYXdhaXQgZmV0Y2goYGh0dHBzOi8vcmVzdGNvdW50cmllcy5jb20vdjMuMS9hbGxgKVxuICAgIGNvbnN0IGRhdGE6SUNvdW50cnlBbnN3ZXJbXSA9IGF3YWl0IGFuc3dlci5qc29uKClcbiAgICByZXR1cm4gZGF0YVxuICB9XG5cbiAgcHJpdmF0ZSBfZ2V0Q291bnRyeU9iakZyb21BbnN3ZXIgPSAoYW5zd2VyOklDb3VudHJ5QW5zd2VyKT0+e1xuICAgIGNvbnN0IHtjYXBpdGFsLCBuYW1lOntvZmZpY2lhbDpuYW1lfSwgcG9wdWxhdGlvbixyZWdpb24sZmxhZ3M6e3N2ZzppbWd9fSA9IGFuc3dlclxuICAgIHJldHVybiBuZXcgQ291bnRyeShuYW1lLHBvcHVsYXRpb24scmVnaW9uLGNhcGl0YWwsaW1nKVxuICB9XG5cbiAgcHJpdmF0ZSBfZ2V0Q291bnRyaWVzRnJvbVJlcXVlc3QgPSAoZGF0YTpJQ291bnRyeUFuc3dlcltdKSA9PiB7XG4gICAgcmV0dXJuIGRhdGEubWFwKChjb3VudHJ5T2JqKT0+dGhpcy5fZ2V0Q291bnRyeU9iakZyb21BbnN3ZXIoY291bnRyeU9iaikpXG4gIH1cbiAgXG4gIGdldENvdW50cnkgPSBhc3luYyAobmFtZUNvdW50cnk6c3RyaW5nKSA9PiB7XG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHRoaXMuX3JlcXVlc3RCeU5hbWUobmFtZUNvdW50cnkpXG4gICAgcmV0dXJuIHRoaXMuX2dldENvdW50cmllc0Zyb21SZXF1ZXN0KGRhdGEpWzBdXG4gIH1cblxuICBnZXRDb3VudGllc0Zyb21SZWdpb25zUmVxdWVzdCA9IGFzeW5jIChyZWdpb246c3RyaW5nKT0+e1xuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCB0aGlzLl9yZXF1ZXN0QnlSZWdpb24ocmVnaW9uKVxuICAgIHJldHVybiB0aGlzLl9nZXRDb3VudHJpZXNGcm9tUmVxdWVzdChkYXRhKVxuICB9XG5cbiAgZ2V0U2VhcmNoUmVzdWx0cyA9IGFzeW5jIChuYW1lQ291bnRyeTpzdHJpbmcpID0+IHtcbiAgICBjb25zdCBkYXRhID0gYXdhaXQgdGhpcy5fcmVxdWVzdEJ5TmFtZShuYW1lQ291bnRyeSlcbiAgICBjb25zdCBzZWFyY2hMaXN0ID0gZGF0YS5tYXAoZWxlbT0+ZWxlbS5uYW1lLm9mZmljaWFsKVxuICAgIHJldHVybiBzZWFyY2hMaXN0XG4gIH1cbiAgZ2V0QWxsQ291bnRyaWVzID1hc3luYyAoKSA9PiB7XG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHRoaXMuX3JlcXVlc3RBbGwoKVxuICAgIHJldHVybiB0aGlzLl9nZXRDb3VudHJpZXNGcm9tUmVxdWVzdChkYXRhKVxuICB9XG5cbn1cbmNvbnN0IHJlcXVlc3QgPSBuZXcgR2V0RGF0YSgpXG5leHBvcnQgZGVmYXVsdCByZXF1ZXN0XG5cblxuXG4gIFxuICBcbiAgIiwiaW1wb3J0IENvdW50cnkgZnJvbSBcIi4vY291bnRyeVwiXG5pbXBvcnQgc3Bpbm5lciBmcm9tIFwiLi9zcGlubmVyXCI7XG5cbiBjbGFzcyBSZW5kZXJMaXN0IHtcbiAgbGlzdDpIVE1MRWxlbWVudFxuICBjb25zdHJ1Y3RvciAoKXtcbiAgICB0aGlzLmxpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY291bnRyaWVzX19saXN0JykhXG4gIH1cbiAgY2xlYXJMaXN0ID0gKCk9PntcbiAgICB0aGlzLmxpc3QuaW5uZXJIVE1MID0gJydcbiAgfVxuICBhZGRDb3VudHJ5ID0gKHtuYW1lLCBwb3B1bGF0aW9uLHJlZ2lvbixjYXBpdGFsLGltZ306Q291bnRyeSk9PntcbiAgICB0aGlzLmxpc3QuaW5zZXJ0QWRqYWNlbnRIVE1MKCdiZWZvcmVlbmQnLCBgXG4gICAgPGxpIGNsYXNzPVwiY291bnRyaWVzX19jb3VudHJ5LWl0ZW0gY291bnRyeVwiPlxuICAgICAgICA8aW1nIHNyYz1cIiR7aW1nfVwiIGFsdD1cIlwiIGNsYXNzPVwiY291bnRyeV9fZmxhZ1wiPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiY291bnRyeV9fZGVzY3JpcHRpb25cIj5cbiAgICAgICAgICAgIDxoMyBjbGFzcz1cImNvdW50cnlfX3RpdGxlXCI+JHtuYW1lfTwvaDM+XG4gICAgICAgICAgICA8cCBjbGFzcz1cImNvdW50cnlfX2luZm9cIj48Yj5Qb3B1bGF0aW9uOiA8L2I+JHtwb3B1bGF0aW9ufTwvcD5cbiAgICAgICAgICAgIDxwIGNsYXNzPVwiY291bnRyeV9faW5mb1wiPjxiPlJlZ2lvbjo8L2I+ICR7cmVnaW9ufTwvcD5cbiAgICAgICAgICAgIDxwIGNsYXNzPVwiY291bnRyeV9faW5mb1wiPjxiPkNhcGl0YWw6PC9iPiAke2NhcGl0YWx9PC9wPlxuICAgICAgICA8L2Rpdj5cbiAgICA8L2xpPmApXG4gIH1cbiAgYWRkQXJyYXlDb3VudHJpZXMgPSAoYXJyOkNvdW50cnlbXSk9PntcbiAgICBzcGlubmVyLmFjdGl2YXRlKClcbiAgICB0aGlzLmNsZWFyTGlzdCgpXG4gICAgdGhpcy5saXN0LnN0eWxlLmRpc3BsYXk9J25vbmUnXG4gICAgYXJyLmZvckVhY2goZWw9PnRoaXMuYWRkQ291bnRyeShlbCkpXG4gICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICBzcGlubmVyLmRlYWN0aXZhdGUoKVxuICAgIH0sIDUwMCk7XG4gICAgdGhpcy5saXN0LnN0eWxlLmRpc3BsYXk9J2dyaWQnXG4gICAgXG4gIH1cbn1cbmNvbnN0IHJlbmRlckZuID0gbmV3IFJlbmRlckxpc3QoKVxuZXhwb3J0IGRlZmF1bHQgcmVuZGVyRm4iLCJpbXBvcnQgQ291bnRyeSBmcm9tIFwiLi9jb3VudHJ5XCJcbmltcG9ydCByZXF1ZXN0IGZyb20gXCIuL2dldERhdGFcIlxuaW1wb3J0IHJlbmRlckZuIGZyb20gXCIuL3JlbmRlckxpc3RcIlxuXG5jbGFzcyBTZWxlY3Qge1xuICBlbGVtZW50OkhUTUxTZWxlY3RFbGVtZW50XG4gIHByaXZhdGUgX3NlbGVjdENob2ljZTogc3RyaW5nfG51bGxcbiAgZ2V0U2VsZWN0ZWRDb3VudHJpZXM6IENvdW50cnlbXVxuXG4gIGNvbnN0cnVjdG9yKCl7XG4gICAgdGhpcy5lbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNlYXJjaF9fc2VsZWN0LXJlZ2lvbicpIVxuICAgIHRoaXMuX3NlbGVjdENob2ljZSA9IG51bGxcbiAgICB0aGlzLmdldFNlbGVjdGVkQ291bnRyaWVzPVtdXG4gICAgdGhpcy5fc2VsZWN0TGlzdGVuZXIoKVxuICB9XG4gIHByaXZhdGUgX3NlbGVjdExpc3RlbmVyID0gKCk9PntcbiAgICB0aGlzLmVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgYXN5bmMgKCk9PntcbiAgICAgIHRoaXMuX3NlbGVjdENob2ljZSA9IHRoaXMuZWxlbWVudC52YWx1ZVxuICAgICAgaWYgKHRoaXMuX3NlbGVjdENob2ljZT09PVwiQWxsXCIpIHtcbiAgICAgICAgdGhpcy5nZXRTZWxlY3RlZENvdW50cmllcyA9IGF3YWl0IHJlcXVlc3QuZ2V0QWxsQ291bnRyaWVzKClcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuZ2V0U2VsZWN0ZWRDb3VudHJpZXMgPSBhd2FpdCByZXF1ZXN0LmdldENvdW50aWVzRnJvbVJlZ2lvbnNSZXF1ZXN0KHRoaXMuX3NlbGVjdENob2ljZSlcbiAgICAgIH1cbiAgICAgIHJlbmRlckZuLmFkZEFycmF5Q291bnRyaWVzKHRoaXMuZ2V0U2VsZWN0ZWRDb3VudHJpZXMpXG4gICAgfSlcbiAgfVxufVxuY29uc3Qgc2VsZWN0ID0gbmV3IFNlbGVjdCgpXG5leHBvcnQgZGVmYXVsdCBzZWxlY3QiLCJjbGFzcyBTcGlubmVyIHtcbiAgZWxlbWVudDpIVE1MRGl2RWxlbWVudFxuICBjb25zdHJ1Y3Rvcigpe1xuICAgIHRoaXMuZWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zcGlubmVyLXdyYXBwZXInKSFcbiAgfVxuICBhY3RpdmF0ZSA9ICgpPT57XG4gICAgdGhpcy5lbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoJ3NwaW5uZXItZGVhY3RpdmF0ZWQnKVxuICAgIHRoaXMuZWxlbWVudC5jbGFzc0xpc3QuYWRkKCdzcGlubmVyLWFjdGl2ZScpXG4gIH1cbiAgZGVhY3RpdmF0ZSA9ICgpPT57XG4gICAgdGhpcy5lbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoJ3NwaW5uZXItYWN0aXZlJylcbiAgICB0aGlzLmVsZW1lbnQuY2xhc3NMaXN0LmFkZCgnc3Bpbm5lci1kZWFjdGl2YXRlZCcpXG4gIH1cbn1cbmNvbnN0IHNwaW5uZXIgPSBuZXcgU3Bpbm5lcigpXG5leHBvcnQgZGVmYXVsdCBzcGlubmVyICIsIlxuY2xhc3MgYnRuQ2hhbmdlTW9kZSB7XG4gIGVsZW1lbnQ6SFRNTEJ1dHRvbkVsZW1lbnRcbiAgaW1nOntcbiAgICBzdW46VVJMLFxuICAgIG1vb246VVJMXG4gIH1cbiAgX2N1c3RvbWVyVGhlbWUgOiBzdHJpbmdcbiAgY29uc3RydWN0b3IoKXtcbiAgICB0aGlzLmVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuaGVhZGVyX19idG4tbW9kZS1ibG9jaycpIVxuICAgIHRoaXMuaW1nID0ge1xuICAgICAgc3VuOiByZXF1aXJlICgnLi4vLi4vYXNzZXRzL2ltZy93aGl0ZS1iYWxhbmNlLXN1bm55LnN2ZycpLFxuICAgICAgbW9vbjogcmVxdWlyZSAoJy4uLy4uL2Fzc2V0cy9pbWcvbW9vbi13YW5pbmctY3Jlc2NlbnQuc3ZnJylcbiAgICB9XG4gICAgdGhpcy5fY3VzdG9tZXJUaGVtZSA9IHdpbmRvdy5tYXRjaE1lZGlhKFwiKHByZWZlcnMtY29sb3Itc2NoZW1lOiBkYXJrKVwiKS5tYXRjaGVzID8gXCJkYXJrXCIgOiBcImxpZ2h0XCJcbiAgICB0aGlzLl9pbml0aWFsaXplKClcbiAgfVxuXG4gICAgcHJpdmF0ZSBfcmVuZGVyRGFyayA9ICgpPT57XG4gICAgICB0aGlzLmVsZW1lbnQuaW5uZXJIVE1MPWA8aW1nIGNsYXNzPVwiaGVhZGVyX19idG4taW1nXCIgc3JjPVwiJHt0aGlzLmltZy5zdW59XCIgYWx0PVwiXCI+XG4gICAgICA8YnV0dG9uIGNsYXNzPVwiaGVhZGVyX19idG4tbW9kZVwiPkxpZ2h0IE1vZGU8L2J1dHRvbj5gXG4gICAgfVxuICAgIHByaXZhdGUgX3JlbmRlckxpZ2h0ID0gKCk9PntcbiAgICAgIHRoaXMuZWxlbWVudC5pbm5lckhUTUw9YDxpbWcgY2xhc3M9XCJoZWFkZXJfX2J0bi1pbWdcIiBzcmM9XCIke3RoaXMuaW1nLm1vb259XCIgYWx0PVwiXCI+XG4gICAgICA8YnV0dG9uIGNsYXNzPVwiaGVhZGVyX19idG4tbW9kZVwiPkRhcmsgTW9kZTwvYnV0dG9uPmBcbiAgICB9XG4gICAgcHJpdmF0ZSBfcmVuZGVyQnRuID0gKCk9PntcbiAgICAgIHRoaXMuX2N1c3RvbWVyVGhlbWU9PT1cImRhcmtcIj90aGlzLl9yZW5kZXJEYXJrKCk6dGhpcy5fcmVuZGVyTGlnaHQoKVxuICAgIH1cbiAgICBwcml2YXRlIF9pbml0aWFsaXplID0gKCk9PntcbiAgICAgIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2RhdGEtdGhlbWUnLCB0aGlzLl9jdXN0b21lclRoZW1lIClcbiAgICAgIHRoaXMuX3JlbmRlckJ0bigpXG4gICAgfVxuICAgIGNoYW5nZVRoZW1lID0gKCk9PntcbiAgICAgIGxldCB0YXJnZXRUaGVtZVxuICAgICAgdGhpcy5fY3VzdG9tZXJUaGVtZSA9PT0gXCJsaWdodFwiID8gdGFyZ2V0VGhlbWUgPSBcImRhcmtcIiA6IHRhcmdldFRoZW1lID0gXCJsaWdodFwiXG4gICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2V0QXR0cmlidXRlKCdkYXRhLXRoZW1lJywgdGFyZ2V0VGhlbWUpXG4gICAgICB0aGlzLl9jdXN0b21lclRoZW1lID0gdGFyZ2V0VGhlbWVcbiAgICAgIGJ0bk1vZGUuX3JlbmRlckJ0bigpXG4gICAgfVxufVxuXG5jb25zdCBidG5Nb2RlID0gbmV3IGJ0bkNoYW5nZU1vZGUoKVxuXG5leHBvcnQgZGVmYXVsdCBidG5Nb2RlXG4iLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdC8vIG5vIG1vZHVsZS5pZCBuZWVkZWRcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuLy8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbl9fd2VicGFja19yZXF1aXJlX18ubSA9IF9fd2VicGFja19tb2R1bGVzX187XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuXHRcdCgpID0+IChtb2R1bGUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5nID0gKGZ1bmN0aW9uKCkge1xuXHRpZiAodHlwZW9mIGdsb2JhbFRoaXMgPT09ICdvYmplY3QnKSByZXR1cm4gZ2xvYmFsVGhpcztcblx0dHJ5IHtcblx0XHRyZXR1cm4gdGhpcyB8fCBuZXcgRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcblx0fSBjYXRjaCAoZSkge1xuXHRcdGlmICh0eXBlb2Ygd2luZG93ID09PSAnb2JqZWN0JykgcmV0dXJuIHdpbmRvdztcblx0fVxufSkoKTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwiLy8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5yID0gKGV4cG9ydHMpID0+IHtcblx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG5cdH1cblx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbn07IiwidmFyIHNjcmlwdFVybDtcbmlmIChfX3dlYnBhY2tfcmVxdWlyZV9fLmcuaW1wb3J0U2NyaXB0cykgc2NyaXB0VXJsID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmxvY2F0aW9uICsgXCJcIjtcbnZhciBkb2N1bWVudCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5kb2N1bWVudDtcbmlmICghc2NyaXB0VXJsICYmIGRvY3VtZW50KSB7XG5cdGlmIChkb2N1bWVudC5jdXJyZW50U2NyaXB0KVxuXHRcdHNjcmlwdFVybCA9IGRvY3VtZW50LmN1cnJlbnRTY3JpcHQuc3JjXG5cdGlmICghc2NyaXB0VXJsKSB7XG5cdFx0dmFyIHNjcmlwdHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNjcmlwdFwiKTtcblx0XHRpZihzY3JpcHRzLmxlbmd0aCkgc2NyaXB0VXJsID0gc2NyaXB0c1tzY3JpcHRzLmxlbmd0aCAtIDFdLnNyY1xuXHR9XG59XG4vLyBXaGVuIHN1cHBvcnRpbmcgYnJvd3NlcnMgd2hlcmUgYW4gYXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCB5b3UgbXVzdCBzcGVjaWZ5IGFuIG91dHB1dC5wdWJsaWNQYXRoIG1hbnVhbGx5IHZpYSBjb25maWd1cmF0aW9uXG4vLyBvciBwYXNzIGFuIGVtcHR5IHN0cmluZyAoXCJcIikgYW5kIHNldCB0aGUgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gdmFyaWFibGUgZnJvbSB5b3VyIGNvZGUgdG8gdXNlIHlvdXIgb3duIGxvZ2ljLlxuaWYgKCFzY3JpcHRVcmwpIHRocm93IG5ldyBFcnJvcihcIkF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgaW4gdGhpcyBicm93c2VyXCIpO1xuc2NyaXB0VXJsID0gc2NyaXB0VXJsLnJlcGxhY2UoLyMuKiQvLCBcIlwiKS5yZXBsYWNlKC9cXD8uKiQvLCBcIlwiKS5yZXBsYWNlKC9cXC9bXlxcL10rJC8sIFwiL1wiKTtcbl9fd2VicGFja19yZXF1aXJlX18ucCA9IHNjcmlwdFVybDsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmIgPSBkb2N1bWVudC5iYXNlVVJJIHx8IHNlbGYubG9jYXRpb24uaHJlZjtcblxuLy8gb2JqZWN0IHRvIHN0b3JlIGxvYWRlZCBhbmQgbG9hZGluZyBjaHVua3Ncbi8vIHVuZGVmaW5lZCA9IGNodW5rIG5vdCBsb2FkZWQsIG51bGwgPSBjaHVuayBwcmVsb2FkZWQvcHJlZmV0Y2hlZFxuLy8gW3Jlc29sdmUsIHJlamVjdCwgUHJvbWlzZV0gPSBjaHVuayBsb2FkaW5nLCAwID0gY2h1bmsgbG9hZGVkXG52YXIgaW5zdGFsbGVkQ2h1bmtzID0ge1xuXHQxNzk6IDBcbn07XG5cbi8vIG5vIGNodW5rIG9uIGRlbWFuZCBsb2FkaW5nXG5cbi8vIG5vIHByZWZldGNoaW5nXG5cbi8vIG5vIHByZWxvYWRlZFxuXG4vLyBubyBITVJcblxuLy8gbm8gSE1SIG1hbmlmZXN0XG5cbi8vIG5vIG9uIGNodW5rcyBsb2FkZWRcblxuLy8gbm8ganNvbnAgZnVuY3Rpb24iLCJpbXBvcnQgXCIuLi9pbmRleC5odG1sXCJcbmltcG9ydCBcIi4vY29tcG9uZW50L2NsaWNrSGFuZGxlclwiO1xuXG5cblxuXG5cblxuXG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsIl9fX0hUTUxfTE9BREVSX0lNUE9SVF8wX19fIiwiVVJMIiwidXJsIiwib3B0aW9ucyIsIlN0cmluZyIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiaGFzaCIsIm1heWJlTmVlZFF1b3RlcyIsInRlc3QiLCJjb25jYXQiLCJzZWFyY2giLCJjb25zdHJ1Y3RvciIsIl9nZXRWYWx1ZSIsImVsZW1lbnQiLCJ2YWx1ZSIsImdldFNlYXJjaFJlc3VsdHMiLCJ0aGlzIiwic2VhcmNoTGV0dGVycyIsInNwbGl0IiwiZ2V0U2VsZWN0ZWRDb3VudHJpZXMiLCJmaWx0ZXIiLCJjb3VudHJ5IiwiY2hlY2siLCJuYW1lIiwiZm9yRWFjaCIsImxldHRlciIsImluZGV4IiwiZmluZEluZGV4IiwiZWwiLCJzcGxpY2UiLCJtYXAiLCJfYWRkT3B0aW9uIiwiaW5zZXJ0QWRqYWNlbnRIVE1MIiwiY2xlYXJPcHRpb25zIiwiaW5uZXJIVE1MIiwiX3VwZGF0ZURvbSIsImRlbGF5IiwiYWRkRXZlbnRMaXN0ZW5lciIsImNsZWFyVGltZW91dCIsInNldFRpbWVvdXQiLCJlcnJvciIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImhhbmRsZXIiLCJldmVudCIsInRhcmdldCIsIkhUTUxFbGVtZW50IiwiY2xhc3NMaXN0IiwiY29udGFpbnMiLCJ0ZXh0Q29udGVudCIsImdldENvdW50cnkiLCJhZGRBcnJheUNvdW50cmllcyIsImNsb3Nlc3QiLCJjaGFuZ2VUaGVtZSIsInBvcHVsYXRpb24iLCJyZWdpb24iLCJjYXBpdGFsIiwiaW1nIiwicmVxdWVzdCIsIl9yZXF1ZXN0QnlOYW1lIiwibmFtZUNvdW50cnkiLCJhbnN3ZXIiLCJmZXRjaCIsImpzb24iLCJfcmVxdWVzdEJ5UmVnaW9uIiwiX3JlcXVlc3RBbGwiLCJfZ2V0Q291bnRyeU9iakZyb21BbnN3ZXIiLCJvZmZpY2lhbCIsImZsYWdzIiwic3ZnIiwiX2dldENvdW50cmllc0Zyb21SZXF1ZXN0IiwiZGF0YSIsImNvdW50cnlPYmoiLCJnZXRDb3VudGllc0Zyb21SZWdpb25zUmVxdWVzdCIsImVsZW0iLCJnZXRBbGxDb3VudHJpZXMiLCJyZW5kZXJGbiIsImNsZWFyTGlzdCIsImxpc3QiLCJhZGRDb3VudHJ5IiwiYXJyIiwiYWN0aXZhdGUiLCJzdHlsZSIsImRpc3BsYXkiLCJkZWFjdGl2YXRlIiwic2VsZWN0IiwiX3NlbGVjdExpc3RlbmVyIiwiX3NlbGVjdENob2ljZSIsInNwaW5uZXIiLCJyZW1vdmUiLCJhZGQiLCJidG5Nb2RlIiwiX3JlbmRlckRhcmsiLCJzdW4iLCJfcmVuZGVyTGlnaHQiLCJtb29uIiwiX3JlbmRlckJ0biIsIl9jdXN0b21lclRoZW1lIiwiX2luaXRpYWxpemUiLCJkb2N1bWVudEVsZW1lbnQiLCJzZXRBdHRyaWJ1dGUiLCJ0YXJnZXRUaGVtZSIsIndpbmRvdyIsIm1hdGNoTWVkaWEiLCJtYXRjaGVzIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwidW5kZWZpbmVkIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsImNhbGwiLCJtIiwibiIsImdldHRlciIsImQiLCJhIiwiZGVmaW5pdGlvbiIsImtleSIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJnIiwiZ2xvYmFsVGhpcyIsIkZ1bmN0aW9uIiwiZSIsIm9iaiIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsInIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInNjcmlwdFVybCIsImltcG9ydFNjcmlwdHMiLCJsb2NhdGlvbiIsImN1cnJlbnRTY3JpcHQiLCJzcmMiLCJzY3JpcHRzIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJsZW5ndGgiLCJFcnJvciIsInJlcGxhY2UiLCJwIiwiYiIsImJhc2VVUkkiLCJzZWxmIiwiaHJlZiJdLCJzb3VyY2VSb290IjoiIn0=