(()=>{var e={619:(e,t,i)=>{e.exports=i.p+"imgs/moon-waning-crescent.c3556d440980c942661792fe126a221b.svg"},776:(e,t,i)=>{e.exports=i.p+"imgs/white-balance-sunny.192e78bb875e4f1909eae6d408e72fae.svg"},766:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>c});var n=i(91),s=i.n(n),o=new URL(i(376),i.b),r=new URL(i(956),i.b);const c='<!DOCTYPE html> <html lang="en"> <head> <meta charset="UTF-8"> <meta http-equiv="X-UA-Compatible" content="IE=edge"> <meta name="viewport" content="width=device-width/ninitial-scale=1"> <title>Country</title> <link rel="stylesheet" href="'+s()(o)+'"> </head> <body> <header class="header"> <h1 class="header__title">Where in the world?</h1> <div class="header__btn-mode-block"> <img class="header__btn-img" src="'+s()(r)+'" alt=""> <button class="header__btn-mode">Dark Mode</button> </div> </header> <main class="countries__container"> <form action="" class="countries__search-form"> <section class="country__search search"> <input class="search__input" type="search" placeholder="Search city" name="city" id="searchLocation"> <ul class="search__options"></ul> </section> <select class="search__select-region" name="regions" id="sel1"> <option value="Initial">--Please choose a region--</option> <option value="All">All</option> <option value="Africa">Africa</option> <option value="Americas">Americas</option> <option value="Asia">Asia</option> <option value="Europe">Europe</option> <option value="Oceania">Oceania</option> </select> </form> <div class="countries__list-wrapper"> <ul class="countries__list"> </ul> <div class="spinner-wrapper spinner-deactivated"> <div class="spinner"></div> </div> </div> </main> </body> </html> '},91:e=>{"use strict";e.exports=function(e,t){return t||(t={}),e?(e=String(e.__esModule?e.default:e),t.hash&&(e+=t.hash),t.maybeNeedQuotes&&/[\t\n\f\r "'=<>`]/.test(e)?'"'.concat(e,'"'):e):e}},937:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=class{constructor(e,t,i,n,s){this.name=e,this.population=t,this.region=i,this.capital=n,this.img=s,this.getCountry=()=>this}}},269:function(e,t,i){"use strict";var n=this&&this.__awaiter||function(e,t,i,n){return new(i||(i=Promise))((function(s,o){function r(e){try{a(n.next(e))}catch(e){o(e)}}function c(e){try{a(n.throw(e))}catch(e){o(e)}}function a(e){var t;e.done?s(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(r,c)}a((n=n.apply(e,t||[])).next())}))},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const o=s(i(937)),r=new class{constructor(){this._requestByName=e=>n(this,void 0,void 0,(function*(){const t=yield fetch(`https://restcountries.com/v3.1/name/${e}`);return yield t.json()})),this._requestByRegion=e=>n(this,void 0,void 0,(function*(){const t=yield fetch(`https://restcountries.com/v3.1/region/${e}`);return yield t.json()})),this._requestAll=()=>n(this,void 0,void 0,(function*(){const e=yield fetch("https://restcountries.com/v3.1/all");return yield e.json()})),this._getCountryObjFromAnswer=e=>{const{capital:t,name:{official:i},population:n,region:s,flags:{svg:r}}=e;return new o.default(i,n,s,t,r)},this._getCountriesFromRequest=e=>e.map((e=>this._getCountryObjFromAnswer(e))),this.getCountry=e=>n(this,void 0,void 0,(function*(){const t=yield this._requestByName(e);return this._getCountriesFromRequest(t)[0]})),this.getCountiesFromRegionsRequest=e=>n(this,void 0,void 0,(function*(){const t=yield this._requestByRegion(e);return this._getCountriesFromRequest(t)})),this.getSearchResults=e=>n(this,void 0,void 0,(function*(){return(yield this._requestByName(e)).map((e=>e.name.official))})),this.getAllCountries=()=>n(this,void 0,void 0,(function*(){const e=yield this._requestAll();return this._getCountriesFromRequest(e)}))}};t.default=r},727:function(e,t,i){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const s=n(i(152));t.default=class{constructor(){this.clearList=()=>{this.list.innerHTML=""},this.addCountry=({name:e,population:t,region:i,capital:n,img:s})=>{this.list.insertAdjacentHTML("beforeend",`\n    <li class="countries__country-item country">\n        <img src="${s}" alt="" class="country__flag">\n        <div class="country__description">\n            <h3 class="country__title">${e}</h3>\n            <p class="country__info"><b>Population: </b>${t}</p>\n            <p class="country__info"><b>Region:</b> ${i}</p>\n            <p class="country__info"><b>Capital:</b> ${n}</p>\n        </div>\n    </li>`)},this.addArrayCountries=e=>{s.default.activate(),this.clearList(),e.forEach((e=>this.addCountry(e))),setTimeout((()=>{s.default.deactivate()}),500)},this.list=document.querySelector(".countries__list")}}},152:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});const i=new class{constructor(){this.activate=()=>{this.element.classList.remove("spinner-deactivated"),this.element.classList.add("spinner-active")},this.deactivate=()=>{this.element.classList.remove("spinner-active"),this.element.classList.add("spinner-deactivated")},this.element=document.querySelector(".spinner-wrapper")}};t.default=i},534:(e,t,i)=>{"use strict";const n=window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light";n&&document.documentElement.setAttribute("data-theme",n);const s=new class{constructor(){this._renderDark=()=>{this.element.innerHTML=`<img class="header__btn-img" src="${this.img.sun}" alt="">\n      <button class="header__btn-mode">Light Mode</button>`},this._renderLight=()=>{this.element.innerHTML=`<img class="header__btn-img" src="${this.img.moon}" alt="">\n      <button class="header__btn-mode">Dark Mode</button>`},this.renderBtn=e=>{"dark"===e?this._renderDark():this._renderLight()},this.element=document.querySelector(".header__btn-mode-block"),this.img={sun:i(776),moon:i(619)}}};s.renderBtn(n),s.element.addEventListener("click",(()=>{let e;e="light"===document.documentElement.getAttribute("data-theme")?"dark":"light",s.renderBtn(e),document.documentElement.setAttribute("data-theme",e)}))},294:function(e,t,i){"use strict";var n=this&&this.__awaiter||function(e,t,i,n){return new(i||(i=Promise))((function(s,o){function r(e){try{a(n.next(e))}catch(e){o(e)}}function c(e){try{a(n.throw(e))}catch(e){o(e)}}function a(e){var t;e.done?s(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(r,c)}a((n=n.apply(e,t||[])).next())}))},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),i(766);const o=s(i(269)),r=s(i(727));i(534);const c=new r.default,a=new class{constructor(){this._selectListener=()=>{this.select.addEventListener("change",(()=>n(this,void 0,void 0,(function*(){this._selectChoice=this.select.value,"All"===this._selectChoice?this._selectRegion=yield o.default.getAllCountries():this._selectRegion=yield o.default.getCountiesFromRegionsRequest(this._selectChoice),c.addArrayCountries(this._selectRegion)}))))},this._getValue=()=>{if("All"===this.select.value||"Initial"===this.select.value)return o.default.getSearchResults(this.element.value);{const e=this.element.value.split("");return this._selectRegion.filter((t=>{let i=!0;const n=t.name.split("");return e.forEach((e=>{const t=n.findIndex((t=>t===e));-1!==t?n.splice(t,1):i=!1})),i})).map((e=>e.name))}},this._addOption=e=>{this.options.insertAdjacentHTML("beforeend",`\n    <div class="search__option">${e}</div>\n  `)},this.clearOptions=()=>this.options.innerHTML="",this._updateDom=()=>n(this,void 0,void 0,(function*(){let e;this.element.addEventListener("keyup",(()=>{e&&clearTimeout(e),e=setTimeout((()=>n(this,void 0,void 0,(function*(){this.clearOptions();try{(yield this._getValue()).forEach((e=>this._addOption(e)))}catch(e){this.clearOptions(),this._addOption("Country not found")}""===this.element.value&&this.clearOptions()}))),500)}))})),this.element=document.querySelector(".search__input"),this.options=document.querySelector(".search__options"),this.select=document.querySelector(".search__select-region"),this._selectChoice=null,this._selectRegion=[],this._updateDom(),this._selectListener()}};(new class{constructor(){this.handler=()=>{document.addEventListener("click",(e=>n(this,void 0,void 0,(function*(){const t=e.target;if(t instanceof HTMLElement&&t.classList.contains("search__option")){if(!t.textContent||"Country not found"===t.textContent)return;const e=yield o.default.getCountry(t.textContent);c.addArrayCountries([e]),a.clearOptions(),a.element.value=e.name}}))))}}}).handler()},956:(e,t,i)=>{"use strict";e.exports=i.p+"890b42c2ad252174f617.svg"},376:(e,t,i)=>{"use strict";e.exports=i.p+"css/style.css"}},t={};function i(n){var s=t[n];if(void 0!==s)return s.exports;var o=t[n]={exports:{}};return e[n].call(o.exports,o,o.exports,i),o.exports}i.m=e,i.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return i.d(t,{a:t}),t},i.d=(e,t)=>{for(var n in t)i.o(t,n)&&!i.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},i.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),i.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e;i.g.importScripts&&(e=i.g.location+"");var t=i.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var n=t.getElementsByTagName("script");n.length&&(e=n[n.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),i.p=e})(),i.b=document.baseURI||self.location.href,i(294)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Y0MsTUFDL0JKLEdBQVcsQ0FDZixJQUFJSyxFQUFVdEYsRUFBU3VGLHFCQUFxQixVQUN6Q0QsRUFBUUUsU0FBUVAsRUFBWUssRUFBUUEsRUFBUUUsT0FBUyxHQUFHSCxJQUM1RCxDQUlELElBQUtKLEVBQVcsTUFBTSxJQUFJUSxNQUFNLHlEQUNoQ1IsRUFBWUEsRUFBVVMsUUFBUSxPQUFRLElBQUlBLFFBQVEsUUFBUyxJQUFJQSxRQUFRLFlBQWEsS0FDcEZ0QyxFQUFvQnVDLEVBQUlWLEMsS0NmeEI3QixFQUFvQndDLEVBQUk1RixTQUFTNkYsU0FBV0MsS0FBS1gsU0FBU1ksS0NHaEMzQyxFQUFvQixJIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vanMvLi9zcmMvYXNzZXRzL2ltZy9tb29uLXdhbmluZy1jcmVzY2VudC5zdmciLCJ3ZWJwYWNrOi8vanMvLi9zcmMvYXNzZXRzL2ltZy93aGl0ZS1iYWxhbmNlLXN1bm55LnN2ZyIsIndlYnBhY2s6Ly9qcy8uL3NyYy9pbmRleC5odG1sIiwid2VicGFjazovL2pzLy4vbm9kZV9tb2R1bGVzL2h0bWwtbG9hZGVyL2Rpc3QvcnVudGltZS9nZXRVcmwuanMiLCJ3ZWJwYWNrOi8vanMvLi9zcmMvdHMvY29tcG9uZW50L2NvdW50cnkudHMiLCJ3ZWJwYWNrOi8vanMvLi9zcmMvdHMvY29tcG9uZW50L2dldERhdGEudHMiLCJ3ZWJwYWNrOi8vanMvLi9zcmMvdHMvY29tcG9uZW50L3JlbmRlckxpc3QudHMiLCJ3ZWJwYWNrOi8vanMvLi9zcmMvdHMvY29tcG9uZW50L3NwaW5uZXIudHMiLCJ3ZWJwYWNrOi8vanMvLi9zcmMvdHMvY29tcG9uZW50L3RoZW1lLnRzIiwid2VicGFjazovL2pzLy4vc3JjL3RzL2luZGV4LnRzIiwid2VicGFjazovL2pzL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL2pzL3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovL2pzL3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly9qcy93ZWJwYWNrL3J1bnRpbWUvZ2xvYmFsIiwid2VicGFjazovL2pzL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vanMvd2VicGFjay9ydW50aW1lL21ha2UgbmFtZXNwYWNlIG9iamVjdCIsIndlYnBhY2s6Ly9qcy93ZWJwYWNrL3J1bnRpbWUvcHVibGljUGF0aCIsIndlYnBhY2s6Ly9qcy93ZWJwYWNrL3J1bnRpbWUvanNvbnAgY2h1bmsgbG9hZGluZyIsIndlYnBhY2s6Ly9qcy93ZWJwYWNrL3N0YXJ0dXAiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiaW1ncy9tb29uLXdhbmluZy1jcmVzY2VudC5jMzU1NmQ0NDA5ODBjOTQyNjYxNzkyZmUxMjZhMjIxYi5zdmdcIjsiLCJtb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJpbWdzL3doaXRlLWJhbGFuY2Utc3VubnkuMTkyZTc4YmI4NzVlNGYxOTA5ZWFlNmQ0MDhlNzJmYWUuc3ZnXCI7IiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0hUTUxfTE9BREVSX0dFVF9TT1VSQ0VfRlJPTV9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9odG1sLWxvYWRlci9kaXN0L3J1bnRpbWUvZ2V0VXJsLmpzXCI7XG52YXIgX19fSFRNTF9MT0FERVJfSU1QT1JUXzBfX18gPSBuZXcgVVJMKFwiLi9zYXNzL3N0eWxlLnNhc3NcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19IVE1MX0xPQURFUl9JTVBPUlRfMV9fXyA9IG5ldyBVUkwoXCIuL2Fzc2V0cy9pbWcvbW9vbi13YW5pbmctY3Jlc2NlbnQuc3ZnXCIsIGltcG9ydC5tZXRhLnVybCk7XG4vLyBNb2R1bGVcbnZhciBfX19IVE1MX0xPQURFUl9SRVBMQUNFTUVOVF8wX19fID0gX19fSFRNTF9MT0FERVJfR0VUX1NPVVJDRV9GUk9NX0lNUE9SVF9fXyhfX19IVE1MX0xPQURFUl9JTVBPUlRfMF9fXyk7XG52YXIgX19fSFRNTF9MT0FERVJfUkVQTEFDRU1FTlRfMV9fXyA9IF9fX0hUTUxfTE9BREVSX0dFVF9TT1VSQ0VfRlJPTV9JTVBPUlRfX18oX19fSFRNTF9MT0FERVJfSU1QT1JUXzFfX18pO1xudmFyIGNvZGUgPSBcIjwhRE9DVFlQRSBodG1sPiA8aHRtbCBsYW5nPVxcXCJlblxcXCI+IDxoZWFkPiA8bWV0YSBjaGFyc2V0PVxcXCJVVEYtOFxcXCI+IDxtZXRhIGh0dHAtZXF1aXY9XFxcIlgtVUEtQ29tcGF0aWJsZVxcXCIgY29udGVudD1cXFwiSUU9ZWRnZVxcXCI+IDxtZXRhIG5hbWU9XFxcInZpZXdwb3J0XFxcIiBjb250ZW50PVxcXCJ3aWR0aD1kZXZpY2Utd2lkdGgvbmluaXRpYWwtc2NhbGU9MVxcXCI+IDx0aXRsZT5Db3VudHJ5PC90aXRsZT4gPGxpbmsgcmVsPVxcXCJzdHlsZXNoZWV0XFxcIiBocmVmPVxcXCJcIiArIF9fX0hUTUxfTE9BREVSX1JFUExBQ0VNRU5UXzBfX18gKyBcIlxcXCI+IDwvaGVhZD4gPGJvZHk+IDxoZWFkZXIgY2xhc3M9XFxcImhlYWRlclxcXCI+IDxoMSBjbGFzcz1cXFwiaGVhZGVyX190aXRsZVxcXCI+V2hlcmUgaW4gdGhlIHdvcmxkPzwvaDE+IDxkaXYgY2xhc3M9XFxcImhlYWRlcl9fYnRuLW1vZGUtYmxvY2tcXFwiPiA8aW1nIGNsYXNzPVxcXCJoZWFkZXJfX2J0bi1pbWdcXFwiIHNyYz1cXFwiXCIgKyBfX19IVE1MX0xPQURFUl9SRVBMQUNFTUVOVF8xX19fICsgXCJcXFwiIGFsdD1cXFwiXFxcIj4gPGJ1dHRvbiBjbGFzcz1cXFwiaGVhZGVyX19idG4tbW9kZVxcXCI+RGFyayBNb2RlPC9idXR0b24+IDwvZGl2PiA8L2hlYWRlcj4gPG1haW4gY2xhc3M9XFxcImNvdW50cmllc19fY29udGFpbmVyXFxcIj4gPGZvcm0gYWN0aW9uPVxcXCJcXFwiIGNsYXNzPVxcXCJjb3VudHJpZXNfX3NlYXJjaC1mb3JtXFxcIj4gPHNlY3Rpb24gY2xhc3M9XFxcImNvdW50cnlfX3NlYXJjaCBzZWFyY2hcXFwiPiA8aW5wdXQgY2xhc3M9XFxcInNlYXJjaF9faW5wdXRcXFwiIHR5cGU9XFxcInNlYXJjaFxcXCIgcGxhY2Vob2xkZXI9XFxcIlNlYXJjaCBjaXR5XFxcIiBuYW1lPVxcXCJjaXR5XFxcIiBpZD1cXFwic2VhcmNoTG9jYXRpb25cXFwiPiA8dWwgY2xhc3M9XFxcInNlYXJjaF9fb3B0aW9uc1xcXCI+PC91bD4gPC9zZWN0aW9uPiA8c2VsZWN0IGNsYXNzPVxcXCJzZWFyY2hfX3NlbGVjdC1yZWdpb25cXFwiIG5hbWU9XFxcInJlZ2lvbnNcXFwiIGlkPVxcXCJzZWwxXFxcIj4gPG9wdGlvbiB2YWx1ZT1cXFwiSW5pdGlhbFxcXCI+LS1QbGVhc2UgY2hvb3NlIGEgcmVnaW9uLS08L29wdGlvbj4gPG9wdGlvbiB2YWx1ZT1cXFwiQWxsXFxcIj5BbGw8L29wdGlvbj4gPG9wdGlvbiB2YWx1ZT1cXFwiQWZyaWNhXFxcIj5BZnJpY2E8L29wdGlvbj4gPG9wdGlvbiB2YWx1ZT1cXFwiQW1lcmljYXNcXFwiPkFtZXJpY2FzPC9vcHRpb24+IDxvcHRpb24gdmFsdWU9XFxcIkFzaWFcXFwiPkFzaWE8L29wdGlvbj4gPG9wdGlvbiB2YWx1ZT1cXFwiRXVyb3BlXFxcIj5FdXJvcGU8L29wdGlvbj4gPG9wdGlvbiB2YWx1ZT1cXFwiT2NlYW5pYVxcXCI+T2NlYW5pYTwvb3B0aW9uPiA8L3NlbGVjdD4gPC9mb3JtPiA8ZGl2IGNsYXNzPVxcXCJjb3VudHJpZXNfX2xpc3Qtd3JhcHBlclxcXCI+IDx1bCBjbGFzcz1cXFwiY291bnRyaWVzX19saXN0XFxcIj4gPC91bD4gPGRpdiBjbGFzcz1cXFwic3Bpbm5lci13cmFwcGVyIHNwaW5uZXItZGVhY3RpdmF0ZWRcXFwiPiA8ZGl2IGNsYXNzPVxcXCJzcGlubmVyXFxcIj48L2Rpdj4gPC9kaXY+IDwvZGl2PiA8L21haW4+IDwvYm9keT4gPC9odG1sPiBcIjtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IGNvZGU7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHVybCwgb3B0aW9ucykge1xuICBpZiAoIW9wdGlvbnMpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgICBvcHRpb25zID0ge307XG4gIH1cblxuICBpZiAoIXVybCkge1xuICAgIHJldHVybiB1cmw7XG4gIH0gLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVyc2NvcmUtZGFuZ2xlLCBuby1wYXJhbS1yZWFzc2lnblxuXG5cbiAgdXJsID0gU3RyaW5nKHVybC5fX2VzTW9kdWxlID8gdXJsLmRlZmF1bHQgOiB1cmwpO1xuXG4gIGlmIChvcHRpb25zLmhhc2gpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgICB1cmwgKz0gb3B0aW9ucy5oYXNoO1xuICB9XG5cbiAgaWYgKG9wdGlvbnMubWF5YmVOZWVkUXVvdGVzICYmIC9bXFx0XFxuXFxmXFxyIFwiJz08PmBdLy50ZXN0KHVybCkpIHtcbiAgICByZXR1cm4gXCJcXFwiXCIuY29uY2F0KHVybCwgXCJcXFwiXCIpO1xuICB9XG5cbiAgcmV0dXJuIHVybDtcbn07IiwiZXhwb3J0IGludGVyZmFjZSBJQ291bnRyeUFuc3dlciB7XG4gIGNhcGl0YWw6c3RyaW5nXG4gIGZsYWdzIDoge1xuICAgIHN2ZzpzdHJpbmdcbiAgfVxuICBuYW1lOnsgb2ZmaWNpYWw6IHN0cmluZ31cbiAgcG9wdWxhdGlvbjpudW1iZXJcbiAgcmVnaW9uOnN0cmluZ1xufVxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDb3VudHJ5IHtcbiAgY29uc3RydWN0b3IocHVibGljIG5hbWU6c3RyaW5nLCBwdWJsaWMgcG9wdWxhdGlvbjpudW1iZXIscHVibGljIHJlZ2lvbjpzdHJpbmcscHVibGljIGNhcGl0YWw6c3RyaW5nLHB1YmxpYyBpbWc6c3RyaW5nKXtcbiAgfVxuICBnZXRDb3VudHJ5ID0gKCk9PntcbiAgICByZXR1cm4gdGhpc1xuICB9XG59XG4iLCJcbmltcG9ydCBDb3VudHJ5IGZyb20gXCIuL2NvdW50cnlcIlxuaW1wb3J0IHsgSUNvdW50cnlBbnN3ZXIgfSBmcm9tIFwiLi9jb3VudHJ5XCI7XG5cbmNsYXNzIEdldERhdGEge1xuICBjb25zdHJ1Y3RvcigpIHt9XG5cbiAgcHJpdmF0ZSBfcmVxdWVzdEJ5TmFtZSA9IGFzeW5jIChuYW1lQ291bnRyeTpzdHJpbmcpID0+IHtcbiAgICAgIGNvbnN0IGFuc3dlciA9IGF3YWl0IGZldGNoKGBodHRwczovL3Jlc3Rjb3VudHJpZXMuY29tL3YzLjEvbmFtZS8ke25hbWVDb3VudHJ5fWApXG4gICAgICBjb25zdCBkYXRhOklDb3VudHJ5QW5zd2VyW10gPSBhd2FpdCBhbnN3ZXIuanNvbigpXG4gICAgICByZXR1cm4gZGF0YVxuICB9XG5cbiAgcHJpdmF0ZSBfcmVxdWVzdEJ5UmVnaW9uID1hc3luYyAocmVnaW9uOnN0cmluZykgPT4ge1xuICAgIGNvbnN0IGFuc3dlciA9IGF3YWl0IGZldGNoKGBodHRwczovL3Jlc3Rjb3VudHJpZXMuY29tL3YzLjEvcmVnaW9uLyR7cmVnaW9ufWApXG4gICAgY29uc3QgZGF0YTpJQ291bnRyeUFuc3dlcltdID0gYXdhaXQgYW5zd2VyLmpzb24oKVxuICAgIHJldHVybiBkYXRhXG4gIH1cblxuICBwcml2YXRlIF9yZXF1ZXN0QWxsID1hc3luYyAoKSA9PiB7XG4gICAgY29uc3QgYW5zd2VyID0gYXdhaXQgZmV0Y2goYGh0dHBzOi8vcmVzdGNvdW50cmllcy5jb20vdjMuMS9hbGxgKVxuICAgIGNvbnN0IGRhdGE6SUNvdW50cnlBbnN3ZXJbXSA9IGF3YWl0IGFuc3dlci5qc29uKClcbiAgICByZXR1cm4gZGF0YVxuICB9XG5cbiAgcHJpdmF0ZSBfZ2V0Q291bnRyeU9iakZyb21BbnN3ZXIgPSAoYW5zd2VyOklDb3VudHJ5QW5zd2VyKT0+e1xuICAgIGNvbnN0IHtjYXBpdGFsLCBuYW1lOntvZmZpY2lhbDpuYW1lfSwgcG9wdWxhdGlvbixyZWdpb24sZmxhZ3M6e3N2ZzppbWd9fSA9IGFuc3dlclxuICAgIHJldHVybiBuZXcgQ291bnRyeShuYW1lLHBvcHVsYXRpb24scmVnaW9uLGNhcGl0YWwsaW1nKVxuICB9XG5cbiAgcHJpdmF0ZSBfZ2V0Q291bnRyaWVzRnJvbVJlcXVlc3QgPSAoZGF0YTpJQ291bnRyeUFuc3dlcltdKSA9PiB7XG4gICAgcmV0dXJuIGRhdGEubWFwKChjb3VudHJ5T2JqKT0+dGhpcy5fZ2V0Q291bnRyeU9iakZyb21BbnN3ZXIoY291bnRyeU9iaikpXG4gIH1cbiAgXG4gIGdldENvdW50cnkgPSBhc3luYyAobmFtZUNvdW50cnk6c3RyaW5nKSA9PiB7XG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHRoaXMuX3JlcXVlc3RCeU5hbWUobmFtZUNvdW50cnkpXG4gICAgcmV0dXJuIHRoaXMuX2dldENvdW50cmllc0Zyb21SZXF1ZXN0KGRhdGEpWzBdXG4gIH1cblxuICBnZXRDb3VudGllc0Zyb21SZWdpb25zUmVxdWVzdCA9IGFzeW5jIChyZWdpb246c3RyaW5nKT0+e1xuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCB0aGlzLl9yZXF1ZXN0QnlSZWdpb24ocmVnaW9uKVxuICAgIHJldHVybiB0aGlzLl9nZXRDb3VudHJpZXNGcm9tUmVxdWVzdChkYXRhKVxuICB9XG5cbiAgZ2V0U2VhcmNoUmVzdWx0cyA9IGFzeW5jIChuYW1lQ291bnRyeTpzdHJpbmcpID0+IHtcbiAgICBjb25zdCBkYXRhID0gYXdhaXQgdGhpcy5fcmVxdWVzdEJ5TmFtZShuYW1lQ291bnRyeSlcbiAgICBjb25zdCBzZWFyY2hMaXN0ID0gZGF0YS5tYXAoZWxlbT0+ZWxlbS5uYW1lLm9mZmljaWFsKVxuICAgIHJldHVybiBzZWFyY2hMaXN0XG4gIH1cbiAgZ2V0QWxsQ291bnRyaWVzID1hc3luYyAoKSA9PiB7XG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHRoaXMuX3JlcXVlc3RBbGwoKVxuICAgIHJldHVybiB0aGlzLl9nZXRDb3VudHJpZXNGcm9tUmVxdWVzdChkYXRhKVxuICB9XG5cbn1cbmNvbnN0IHJlcXVlc3QgPSBuZXcgR2V0RGF0YSgpXG5leHBvcnQgZGVmYXVsdCByZXF1ZXN0XG5cblxuXG4gIFxuICBcbiAgIiwiaW1wb3J0IENvdW50cnkgZnJvbSBcIi4vY291bnRyeVwiXG5pbXBvcnQgc3Bpbm5lciBmcm9tIFwiLi9zcGlubmVyXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFJlbmRlckxpc3Qge1xuICBsaXN0OkhUTUxFbGVtZW50XG4gIGNvbnN0cnVjdG9yICgpe1xuICAgIHRoaXMubGlzdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jb3VudHJpZXNfX2xpc3QnKSFcbiAgfVxuICBjbGVhckxpc3QgPSAoKT0+e1xuICAgIHRoaXMubGlzdC5pbm5lckhUTUwgPSAnJ1xuICB9XG4gIGFkZENvdW50cnkgPSAoe25hbWUsIHBvcHVsYXRpb24scmVnaW9uLGNhcGl0YWwsaW1nfTpDb3VudHJ5KT0+e1xuICAgIHRoaXMubGlzdC5pbnNlcnRBZGphY2VudEhUTUwoJ2JlZm9yZWVuZCcsIGBcbiAgICA8bGkgY2xhc3M9XCJjb3VudHJpZXNfX2NvdW50cnktaXRlbSBjb3VudHJ5XCI+XG4gICAgICAgIDxpbWcgc3JjPVwiJHtpbWd9XCIgYWx0PVwiXCIgY2xhc3M9XCJjb3VudHJ5X19mbGFnXCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJjb3VudHJ5X19kZXNjcmlwdGlvblwiPlxuICAgICAgICAgICAgPGgzIGNsYXNzPVwiY291bnRyeV9fdGl0bGVcIj4ke25hbWV9PC9oMz5cbiAgICAgICAgICAgIDxwIGNsYXNzPVwiY291bnRyeV9faW5mb1wiPjxiPlBvcHVsYXRpb246IDwvYj4ke3BvcHVsYXRpb259PC9wPlxuICAgICAgICAgICAgPHAgY2xhc3M9XCJjb3VudHJ5X19pbmZvXCI+PGI+UmVnaW9uOjwvYj4gJHtyZWdpb259PC9wPlxuICAgICAgICAgICAgPHAgY2xhc3M9XCJjb3VudHJ5X19pbmZvXCI+PGI+Q2FwaXRhbDo8L2I+ICR7Y2FwaXRhbH08L3A+XG4gICAgICAgIDwvZGl2PlxuICAgIDwvbGk+YClcbiAgfVxuICBhZGRBcnJheUNvdW50cmllcyA9IChhcnI6Q291bnRyeVtdKT0+e1xuICAgIHNwaW5uZXIuYWN0aXZhdGUoKVxuICAgIHRoaXMuY2xlYXJMaXN0KClcbiAgICBhcnIuZm9yRWFjaChlbD0+dGhpcy5hZGRDb3VudHJ5KGVsKSlcbiAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgIHNwaW5uZXIuZGVhY3RpdmF0ZSgpXG4gICAgfSwgNTAwKTtcbiAgICBcbiAgfVxufSIsImNsYXNzIFNwaW5uZXIge1xuICBlbGVtZW50OkhUTUxEaXZFbGVtZW50XG4gIGNvbnN0cnVjdG9yKCl7XG4gICAgdGhpcy5lbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNwaW5uZXItd3JhcHBlcicpIVxuICB9XG4gIGFjdGl2YXRlID0gKCk9PntcbiAgICB0aGlzLmVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSgnc3Bpbm5lci1kZWFjdGl2YXRlZCcpXG4gICAgdGhpcy5lbGVtZW50LmNsYXNzTGlzdC5hZGQoJ3NwaW5uZXItYWN0aXZlJylcbiAgfVxuICBkZWFjdGl2YXRlID0gKCk9PntcbiAgICB0aGlzLmVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSgnc3Bpbm5lci1hY3RpdmUnKVxuICAgIHRoaXMuZWxlbWVudC5jbGFzc0xpc3QuYWRkKCdzcGlubmVyLWRlYWN0aXZhdGVkJylcbiAgfVxufVxuY29uc3Qgc3Bpbm5lciA9IG5ldyBTcGlubmVyKClcbmV4cG9ydCBkZWZhdWx0IHNwaW5uZXIgIiwiY29uc3QgdGhlbWUgPSAod2luZG93Lm1hdGNoTWVkaWEoXCIocHJlZmVycy1jb2xvci1zY2hlbWU6IGRhcmspXCIpLm1hdGNoZXMgPyBcImRhcmtcIiA6IFwibGlnaHRcIilcblxuY2xhc3MgYnRuQ2hhbmdlTW9kZSB7XG4gIGVsZW1lbnQ6SFRNTEJ1dHRvbkVsZW1lbnRcbiAgaW1nOntcbiAgICBzdW46VVJMLFxuICAgIG1vb246VVJMXG4gIH1cbiAgY29uc3RydWN0b3IoKXtcbiAgICB0aGlzLmVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuaGVhZGVyX19idG4tbW9kZS1ibG9jaycpIVxuICAgIHRoaXMuaW1nID0ge1xuICAgICAgc3VuOiByZXF1aXJlICgnLi4vLi4vYXNzZXRzL2ltZy93aGl0ZS1iYWxhbmNlLXN1bm55LnN2ZycpLFxuICAgICAgbW9vbjogcmVxdWlyZSAoJy4uLy4uL2Fzc2V0cy9pbWcvbW9vbi13YW5pbmctY3Jlc2NlbnQuc3ZnJylcbiAgICB9XG4gIH1cbiAgICBwcml2YXRlIF9yZW5kZXJEYXJrID0gKCk9PntcbiAgICAgIHRoaXMuZWxlbWVudC5pbm5lckhUTUw9YDxpbWcgY2xhc3M9XCJoZWFkZXJfX2J0bi1pbWdcIiBzcmM9XCIke3RoaXMuaW1nLnN1bn1cIiBhbHQ9XCJcIj5cbiAgICAgIDxidXR0b24gY2xhc3M9XCJoZWFkZXJfX2J0bi1tb2RlXCI+TGlnaHQgTW9kZTwvYnV0dG9uPmBcbiAgICB9XG4gICAgcHJpdmF0ZSBfcmVuZGVyTGlnaHQgPSAoKT0+e1xuICAgICAgdGhpcy5lbGVtZW50LmlubmVySFRNTD1gPGltZyBjbGFzcz1cImhlYWRlcl9fYnRuLWltZ1wiIHNyYz1cIiR7dGhpcy5pbWcubW9vbn1cIiBhbHQ9XCJcIj5cbiAgICAgIDxidXR0b24gY2xhc3M9XCJoZWFkZXJfX2J0bi1tb2RlXCI+RGFyayBNb2RlPC9idXR0b24+YFxuICAgIH1cbiAgICByZW5kZXJCdG4gPSAodGhlbWU6c3RyaW5nKT0+e1xuICAgICAgdGhlbWU9PT1cImRhcmtcIj90aGlzLl9yZW5kZXJEYXJrKCk6dGhpcy5fcmVuZGVyTGlnaHQoKVxuICAgIH1cbn1cblxuXG5pZiAodGhlbWUpXG4gICAgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNldEF0dHJpYnV0ZSgnZGF0YS10aGVtZScsIHRoZW1lKVxuY29uc3QgYnRuTW9kZSA9IG5ldyBidG5DaGFuZ2VNb2RlKClcbmJ0bk1vZGUucmVuZGVyQnRuKHRoZW1lKVxuXG5idG5Nb2RlLmVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKT0+e1xuICBjb25zdCBjdXJyZW50VGhlbWUgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuZ2V0QXR0cmlidXRlKFwiZGF0YS10aGVtZVwiKTtcbiAgbGV0IHRhcmdldFRoZW1lXG4gIGN1cnJlbnRUaGVtZSA9PT0gXCJsaWdodFwiID8gdGFyZ2V0VGhlbWUgPSBcImRhcmtcIiA6IHRhcmdldFRoZW1lID0gXCJsaWdodFwiXG4gIGJ0bk1vZGUucmVuZGVyQnRuKHRhcmdldFRoZW1lISlcbiAgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNldEF0dHJpYnV0ZSgnZGF0YS10aGVtZScsIHRhcmdldFRoZW1lKVxuICBcbn0pXG4gIiwiaW1wb3J0IHsgQXJyYXlCaW5kaW5nT3JBc3NpZ25tZW50RWxlbWVudCB9IGZyb20gXCJ0eXBlc2NyaXB0XCJcbmltcG9ydCBcIi4uL2luZGV4Lmh0bWxcIlxuaW1wb3J0IENvdW50cnkgZnJvbSBcIi4vY29tcG9uZW50L2NvdW50cnlcIlxuaW1wb3J0IHJlcXVlc3QgZnJvbSBcIi4vY29tcG9uZW50L2dldERhdGFcIlxuaW1wb3J0IFJlbmRlckxpc3QgZnJvbSBcIi4vY29tcG9uZW50L3JlbmRlckxpc3RcIlxuaW1wb3J0IFwiLi9jb21wb25lbnQvdGhlbWVcIjtcblxuY29uc3QgcmVuZGVyRm4gPSBuZXcgUmVuZGVyTGlzdCgpXG5cbmNsYXNzIEFwcCB7XG4gIGVsZW1lbnQ6SFRNTElucHV0RWxlbWVudFxuICBvcHRpb25zOkhUTUxVTGlzdEVsZW1lbnRcbiAgc2VsZWN0OkhUTUxTZWxlY3RFbGVtZW50XG4gIHByaXZhdGUgX3NlbGVjdENob2ljZTogc3RyaW5nfG51bGxcbiAgcHJpdmF0ZSBfc2VsZWN0UmVnaW9uOiBDb3VudHJ5W11cbiAgY29uc3RydWN0b3IoKXtcbiAgICB0aGlzLmVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2VhcmNoX19pbnB1dCcpIVxuICAgIHRoaXMub3B0aW9ucyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zZWFyY2hfX29wdGlvbnMnKSFcbiAgICB0aGlzLnNlbGVjdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zZWFyY2hfX3NlbGVjdC1yZWdpb24nKSFcbiAgICB0aGlzLl9zZWxlY3RDaG9pY2UgPSBudWxsXG4gICAgdGhpcy5fc2VsZWN0UmVnaW9uPVtdXG4gICAgdGhpcy5fdXBkYXRlRG9tKClcbiAgICB0aGlzLl9zZWxlY3RMaXN0ZW5lcigpXG4gIH1cblxuICBwcml2YXRlIF9zZWxlY3RMaXN0ZW5lciA9ICgpPT57XG4gICAgdGhpcy5zZWxlY3QuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgYXN5bmMgKCk9PntcbiAgICAgIHRoaXMuX3NlbGVjdENob2ljZSA9IHRoaXMuc2VsZWN0LnZhbHVlXG4gICAgICBpZiAodGhpcy5fc2VsZWN0Q2hvaWNlPT09XCJBbGxcIikge1xuICAgICAgICB0aGlzLl9zZWxlY3RSZWdpb24gPSBhd2FpdCByZXF1ZXN0LmdldEFsbENvdW50cmllcygpXG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLl9zZWxlY3RSZWdpb24gPSBhd2FpdCByZXF1ZXN0LmdldENvdW50aWVzRnJvbVJlZ2lvbnNSZXF1ZXN0KHRoaXMuX3NlbGVjdENob2ljZSlcbiAgICAgIH1cbiAgICAgIHJlbmRlckZuLmFkZEFycmF5Q291bnRyaWVzKHRoaXMuX3NlbGVjdFJlZ2lvbilcbiAgICB9KVxuICB9XG5cbiAgcHJpdmF0ZSBfZ2V0VmFsdWUgPSAoKT0+e1xuICAgIGlmICh0aGlzLnNlbGVjdC52YWx1ZT09PSdBbGwnfHx0aGlzLnNlbGVjdC52YWx1ZT09PSdJbml0aWFsJykge1xuICAgICAgcmV0dXJuIHJlcXVlc3QuZ2V0U2VhcmNoUmVzdWx0cyh0aGlzLmVsZW1lbnQudmFsdWUpXG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnN0IHNlYXJjaExldHRlcnMgPSB0aGlzLmVsZW1lbnQudmFsdWUuc3BsaXQoJycpXG4gICAgICBjb25zdCBjb3VudHJpZXMgPSB0aGlzLl9zZWxlY3RSZWdpb24uZmlsdGVyKGNvdW50cnk9PntcbiAgICAgICAgbGV0IGNoZWNrID0gdHJ1ZVxuICAgICAgICBjb25zdCBuYW1lID0gY291bnRyeS5uYW1lLnNwbGl0KCcnKVxuICAgICAgICBzZWFyY2hMZXR0ZXJzLmZvckVhY2gobGV0dGVyPT57XG4gICAgICAgICAgY29uc3QgaW5kZXggPSBuYW1lLmZpbmRJbmRleChlbD0+ZWw9PT1sZXR0ZXIpXG4gICAgICAgICAgaWYgKGluZGV4IT09LTEpIHtuYW1lLnNwbGljZShpbmRleCwxKX0gZWxzZSB7Y2hlY2s9ZmFsc2V9XG4gICAgICAgIH0pXG4gICAgICAgIHJldHVybiBjaGVja1xuICAgICAgfSlcbiAgICAgIHJldHVybiBjb3VudHJpZXMubWFwKGNvdW50cnk9PmNvdW50cnkubmFtZSlcbiAgICB9XG4gIH0gXG5cbiAgcHJpdmF0ZSBfYWRkT3B0aW9uID0gKHZhbHVlOnN0cmluZyk9PntcbiAgICB0aGlzLm9wdGlvbnMuaW5zZXJ0QWRqYWNlbnRIVE1MKFwiYmVmb3JlZW5kXCIsIGBcbiAgICA8ZGl2IGNsYXNzPVwic2VhcmNoX19vcHRpb25cIj4ke3ZhbHVlfTwvZGl2PlxuICBgKVxuICB9XG5cbiAgY2xlYXJPcHRpb25zID0gKCk9PnRoaXMub3B0aW9ucy5pbm5lckhUTUw9JydcbiAgXG4gIHByaXZhdGUgX3VwZGF0ZURvbSA9IGFzeW5jICgpPT57XG4gICAgbGV0IGRlbGF5OiBOb2RlSlMuVGltZW91dFxuICAgIHRoaXMuZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXl1cCcsICgpPT57XG5cbiAgICAgIGlmIChkZWxheSkge2NsZWFyVGltZW91dChkZWxheSl9XG4gICAgICBkZWxheSA9IHNldFRpbWVvdXQoYXN5bmMgKCk9PntcbiAgICAgICAgdGhpcy5jbGVhck9wdGlvbnMoKVxuICAgICAgICB0cnkgeyAgICAgICAgICBcbiAgICAgICAgICBjb25zdCBzZWFyY2hWYWx1ZXMgPSBhd2FpdCB0aGlzLl9nZXRWYWx1ZSgpXG4gICAgICAgICAgc2VhcmNoVmFsdWVzLmZvckVhY2goZWw9PnRoaXMuX2FkZE9wdGlvbihlbCkpXG4gICAgICAgICAgfVxuICAgICAgICBjYXRjaChlcnJvcil7XG4gICAgICAgICAgdGhpcy5jbGVhck9wdGlvbnMoKVxuICAgICAgICAgIHRoaXMuX2FkZE9wdGlvbignQ291bnRyeSBub3QgZm91bmQnKVxuICAgICAgICAgIH1cbiAgICAgICAgICBpZiAodGhpcy5lbGVtZW50LnZhbHVlPT09JycpIHsgdGhpcy5jbGVhck9wdGlvbnMoKX1cbiAgICAgICAgfVxuICAgICAgICAgICw1MDApXG4gICAgICB9KVxuICB9XG59XG5cbmNvbnN0IHNlYXJjaCA9IG5ldyBBcHAoKVxuXG5jbGFzcyBDbGlja0hhbmRsZXIge1xuICBoYW5kbGVyOiAoKSA9PiB2b2lkXG4gIGNvbnN0cnVjdG9yKCl7XG4gICAgdGhpcy5oYW5kbGVyID0gKCk9PntcbiAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgYXN5bmMgKGV2ZW50KT0+e1xuICAgICAgICBjb25zdCB0YXJnZXQgPSAgZXZlbnQudGFyZ2V0XG4gICAgICAgIGlmICghKHRhcmdldCBpbnN0YW5jZW9mIEhUTUxFbGVtZW50KSkge3JldHVybn1cbiAgICAgICAgaWYgKHRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoJ3NlYXJjaF9fb3B0aW9uJykpIHsgXG4gICAgICAgICAgaWYgKCF0YXJnZXQudGV4dENvbnRlbnQgfHwgdGFyZ2V0LnRleHRDb250ZW50PT09J0NvdW50cnkgbm90IGZvdW5kJykge3JldHVybn1cbiAgICAgICAgICBjb25zdCBjb3VudHJ5ID0gYXdhaXQgcmVxdWVzdC5nZXRDb3VudHJ5KHRhcmdldC50ZXh0Q29udGVudClcbiAgICAgICAgICByZW5kZXJGbi5hZGRBcnJheUNvdW50cmllcyhbY291bnRyeV0pXG4gICAgICAgICAgc2VhcmNoLmNsZWFyT3B0aW9ucygpXG4gICAgICAgICAgc2VhcmNoLmVsZW1lbnQudmFsdWU9Y291bnRyeS5uYW1lXG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgfVxuICB9XG59XG5cbm5ldyBDbGlja0hhbmRsZXIoKS5oYW5kbGVyKClcblxuXG5cblxuIiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHQvLyBubyBtb2R1bGUuaWQgbmVlZGVkXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbi8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBfX3dlYnBhY2tfbW9kdWxlc19fO1xuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18uZyA9IChmdW5jdGlvbigpIHtcblx0aWYgKHR5cGVvZiBnbG9iYWxUaGlzID09PSAnb2JqZWN0JykgcmV0dXJuIGdsb2JhbFRoaXM7XG5cdHRyeSB7XG5cdFx0cmV0dXJuIHRoaXMgfHwgbmV3IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG5cdH0gY2F0Y2ggKGUpIHtcblx0XHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ29iamVjdCcpIHJldHVybiB3aW5kb3c7XG5cdH1cbn0pKCk7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsIi8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uciA9IChleHBvcnRzKSA9PiB7XG5cdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuXHR9XG5cdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG59OyIsInZhciBzY3JpcHRVcmw7XG5pZiAoX193ZWJwYWNrX3JlcXVpcmVfXy5nLmltcG9ydFNjcmlwdHMpIHNjcmlwdFVybCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5sb2NhdGlvbiArIFwiXCI7XG52YXIgZG9jdW1lbnQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcuZG9jdW1lbnQ7XG5pZiAoIXNjcmlwdFVybCAmJiBkb2N1bWVudCkge1xuXHRpZiAoZG9jdW1lbnQuY3VycmVudFNjcmlwdClcblx0XHRzY3JpcHRVcmwgPSBkb2N1bWVudC5jdXJyZW50U2NyaXB0LnNyY1xuXHRpZiAoIXNjcmlwdFVybCkge1xuXHRcdHZhciBzY3JpcHRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJzY3JpcHRcIik7XG5cdFx0aWYoc2NyaXB0cy5sZW5ndGgpIHNjcmlwdFVybCA9IHNjcmlwdHNbc2NyaXB0cy5sZW5ndGggLSAxXS5zcmNcblx0fVxufVxuLy8gV2hlbiBzdXBwb3J0aW5nIGJyb3dzZXJzIHdoZXJlIGFuIGF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgeW91IG11c3Qgc3BlY2lmeSBhbiBvdXRwdXQucHVibGljUGF0aCBtYW51YWxseSB2aWEgY29uZmlndXJhdGlvblxuLy8gb3IgcGFzcyBhbiBlbXB0eSBzdHJpbmcgKFwiXCIpIGFuZCBzZXQgdGhlIF9fd2VicGFja19wdWJsaWNfcGF0aF9fIHZhcmlhYmxlIGZyb20geW91ciBjb2RlIHRvIHVzZSB5b3VyIG93biBsb2dpYy5cbmlmICghc2NyaXB0VXJsKSB0aHJvdyBuZXcgRXJyb3IoXCJBdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIGluIHRoaXMgYnJvd3NlclwiKTtcbnNjcmlwdFVybCA9IHNjcmlwdFVybC5yZXBsYWNlKC8jLiokLywgXCJcIikucmVwbGFjZSgvXFw/LiokLywgXCJcIikucmVwbGFjZSgvXFwvW15cXC9dKyQvLCBcIi9cIik7XG5fX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBzY3JpcHRVcmw7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5iID0gZG9jdW1lbnQuYmFzZVVSSSB8fCBzZWxmLmxvY2F0aW9uLmhyZWY7XG5cbi8vIG9iamVjdCB0byBzdG9yZSBsb2FkZWQgYW5kIGxvYWRpbmcgY2h1bmtzXG4vLyB1bmRlZmluZWQgPSBjaHVuayBub3QgbG9hZGVkLCBudWxsID0gY2h1bmsgcHJlbG9hZGVkL3ByZWZldGNoZWRcbi8vIFtyZXNvbHZlLCByZWplY3QsIFByb21pc2VdID0gY2h1bmsgbG9hZGluZywgMCA9IGNodW5rIGxvYWRlZFxudmFyIGluc3RhbGxlZENodW5rcyA9IHtcblx0MTc5OiAwXG59O1xuXG4vLyBubyBjaHVuayBvbiBkZW1hbmQgbG9hZGluZ1xuXG4vLyBubyBwcmVmZXRjaGluZ1xuXG4vLyBubyBwcmVsb2FkZWRcblxuLy8gbm8gSE1SXG5cbi8vIG5vIEhNUiBtYW5pZmVzdFxuXG4vLyBubyBvbiBjaHVua3MgbG9hZGVkXG5cbi8vIG5vIGpzb25wIGZ1bmN0aW9uIiwiLy8gc3RhcnR1cFxuLy8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4vLyBUaGlzIGVudHJ5IG1vZHVsZSBpcyByZWZlcmVuY2VkIGJ5IG90aGVyIG1vZHVsZXMgc28gaXQgY2FuJ3QgYmUgaW5saW5lZFxudmFyIF9fd2VicGFja19leHBvcnRzX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDI5NCk7XG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsIl9fX0hUTUxfTE9BREVSX0lNUE9SVF8wX19fIiwiVVJMIiwiX19fSFRNTF9MT0FERVJfSU1QT1JUXzFfX18iLCJ1cmwiLCJvcHRpb25zIiwiU3RyaW5nIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJoYXNoIiwibWF5YmVOZWVkUXVvdGVzIiwidGVzdCIsImNvbmNhdCIsImNvbnN0cnVjdG9yIiwibmFtZSIsInBvcHVsYXRpb24iLCJyZWdpb24iLCJjYXBpdGFsIiwiaW1nIiwiZ2V0Q291bnRyeSIsInRoaXMiLCJyZXF1ZXN0IiwiX3JlcXVlc3RCeU5hbWUiLCJuYW1lQ291bnRyeSIsImFuc3dlciIsImZldGNoIiwianNvbiIsIl9yZXF1ZXN0QnlSZWdpb24iLCJfcmVxdWVzdEFsbCIsIl9nZXRDb3VudHJ5T2JqRnJvbUFuc3dlciIsIm9mZmljaWFsIiwiZmxhZ3MiLCJzdmciLCJfZ2V0Q291bnRyaWVzRnJvbVJlcXVlc3QiLCJkYXRhIiwibWFwIiwiY291bnRyeU9iaiIsImdldENvdW50aWVzRnJvbVJlZ2lvbnNSZXF1ZXN0IiwiZ2V0U2VhcmNoUmVzdWx0cyIsImVsZW0iLCJnZXRBbGxDb3VudHJpZXMiLCJjbGVhckxpc3QiLCJsaXN0IiwiaW5uZXJIVE1MIiwiYWRkQ291bnRyeSIsImluc2VydEFkamFjZW50SFRNTCIsImFkZEFycmF5Q291bnRyaWVzIiwiYXJyIiwiYWN0aXZhdGUiLCJmb3JFYWNoIiwiZWwiLCJzZXRUaW1lb3V0IiwiZGVhY3RpdmF0ZSIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsInNwaW5uZXIiLCJlbGVtZW50IiwiY2xhc3NMaXN0IiwicmVtb3ZlIiwiYWRkIiwidGhlbWUiLCJ3aW5kb3ciLCJtYXRjaE1lZGlhIiwibWF0Y2hlcyIsImRvY3VtZW50RWxlbWVudCIsInNldEF0dHJpYnV0ZSIsImJ0bk1vZGUiLCJfcmVuZGVyRGFyayIsInN1biIsIl9yZW5kZXJMaWdodCIsIm1vb24iLCJyZW5kZXJCdG4iLCJhZGRFdmVudExpc3RlbmVyIiwidGFyZ2V0VGhlbWUiLCJnZXRBdHRyaWJ1dGUiLCJyZW5kZXJGbiIsInNlYXJjaCIsIl9zZWxlY3RMaXN0ZW5lciIsInNlbGVjdCIsIl9zZWxlY3RDaG9pY2UiLCJ2YWx1ZSIsIl9zZWxlY3RSZWdpb24iLCJfZ2V0VmFsdWUiLCJzZWFyY2hMZXR0ZXJzIiwic3BsaXQiLCJmaWx0ZXIiLCJjb3VudHJ5IiwiY2hlY2siLCJsZXR0ZXIiLCJpbmRleCIsImZpbmRJbmRleCIsInNwbGljZSIsIl9hZGRPcHRpb24iLCJjbGVhck9wdGlvbnMiLCJfdXBkYXRlRG9tIiwiZGVsYXkiLCJjbGVhclRpbWVvdXQiLCJlcnJvciIsImhhbmRsZXIiLCJldmVudCIsInRhcmdldCIsIkhUTUxFbGVtZW50IiwiY29udGFpbnMiLCJ0ZXh0Q29udGVudCIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsInVuZGVmaW5lZCIsIl9fd2VicGFja19tb2R1bGVzX18iLCJjYWxsIiwibSIsIm4iLCJnZXR0ZXIiLCJkIiwiYSIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiZyIsImdsb2JhbFRoaXMiLCJGdW5jdGlvbiIsImUiLCJvYmoiLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJyIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJzY3JpcHRVcmwiLCJpbXBvcnRTY3JpcHRzIiwibG9jYXRpb24iLCJjdXJyZW50U2NyaXB0Iiwic3JjIiwic2NyaXB0cyIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwibGVuZ3RoIiwiRXJyb3IiLCJyZXBsYWNlIiwicCIsImIiLCJiYXNlVVJJIiwic2VsZiIsImhyZWYiXSwic291cmNlUm9vdCI6IiJ9